{"version":3,"sources":["components/Arrow.js","components/Card.js","components/ErrorBanner.js","components/InputBox.js","components/PercentageOverlay.js","lib/storage/VideoProgress.js","lib/storage/base.js","components/MovieRow.js","components/Progress.js","hooks/useMovie.js","components/Title.js","components/TypeSelector.js","lib/scraper/theflix.js","lib/scraper/trailersto.js","lib/scraper/vidzstore.js","lib/scraper/xemovie.js","lib/index.js","views/Search.js","components/VideoPlaceholder.js","components/VideoElement.js","components/NumberSelector.js","components/SelectBox.js","components/EpisodeSelector.js","hooks/useWindowSize.js","views/Movie.js","App.js","index.js"],"names":["Arrow","props","className","dangerouslySetInnerHTML","__html","left","Card","React","useState","showing","setShowing","measureRef","useRef","height","setHeight","useEffect","current","show","clientHeight","fullWidth","doTransition","style","ref","children","ErrorBanner","InputBox","onSubmit","placeholder","searchTerm","setSearchTerm","e","preventDefault","type","id","value","onChange","target","required","PercentageOverlay","percentage","Math","max","width","Fragment","VideoProgressStore","_data","versionList","maxVersion","versions","storageString","instanceHelpers","staticHelpers","setKey","str","this","addVersion","version","migrate","create","Error","push","toString","update","data","init","registerHelper","name","helper","constructor","String","Function","includes","build","versionListSorted","sort","a","b","forEach","v","i","arr","d","currentVersion","get","store","localStorage","getItem","JSON","parse","console","error","Object","_","save","setItem","stringify","entries","undefined","bind","obj","Number","buildStoreObject","MovieRow","progress","progressData","source","movie","slug","full","floor","currentlyAt","totalDuration","tabIndex","onKeyPress","event","code","onClick","viewBox","fill","xmlns","title","year","place","season","episode","Progress","failed","text","length","steps","toFixed","MovieContext","createContext","MovieProvider","page","setPage","stream","setStream","streamData","setStreamData","Provider","navigate","setStreamUrl","streamUrl","p","resetStreamData","useMovie","useContext","Title","history","useHistory","size","accentLink","accent","handleAccentClick","TypeSelector","setType","choices","selected","noWrap","selectedIndex","findIndex","transformStyles","opacity","transform","map","choice","label","BASE_URL","process","term","toLowerCase","fetch","then","tmdbRes","doc","DOMParser","parseFromString","nodes","Array","from","querySelectorAll","results","slice","node","querySelector","getAttribute","textContent","trim","split","replace","options","sNodes","seasons","episodes","s","epRes","url","res","scripts","prop","find","pageProps","videoUrl","theflix","findContent","getStreamUrl","getEpisodes","trailersto","searchUrl","searchRes","parser","titleArray","splice","join","innerText","pop","shift","encodeURIComponent","href","decodeURIComponent","DOM","src","vidzstore","json","movieInfo","release_date","substr","indexOf","xemovie","Promise","all","o","SearchView","routeMatch","useRouteMatch","params","streamRouteMatch","setOptions","setProgress","setText","setFailed","showingOptions","setShowingOptions","errorStatus","setErrorStatus","continueWatching","setContinueWatching","fail","getStream","realUrl","subtitles","subs","query","contentType","catch","fetchHealth","newContinueWatching","keys","values","subselection","entry","percentageDone","meta","newShow","parseInt","updatedAt","to","handleKeyPress","Helmet","searchMovie","reduce","deletable","newCW","filter","progressSave","window","location","reload","color","paddingLeft","rel","VideoPlaceholder","VideoElement","loading","videoRef","startTime","setError","onLoad","currentTime","hls","Hls","isSupported","canPlayType","attachMedia","loadSource","crossOrigin","controls","autoPlay","onProgress","onLoadedData","sub","index","kind","language","file","NumberSelector","Option","option","htmlFor","SelectBox","selectedItem","setSelectedItem","isArray","active","setActive","containerRef","handleClick","contains","closeDropdown","document","addEventListener","removeEventListener","onOptionClick","stopPropagation","handleOptionKeyPress","opt","EpisodeSelector","setSelectedSeason","selectedSeason","setEpisode","currentSeason","currentEpisode","round","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","useWindowSize","MovieView","baseRouteMatch","showRouteMatch","seasonList","setSeasonList","episodeLists","setEpisodeList","setLoading","setStartTime","isVideoTimeSet","cancel","key","time","evt","currentTarget","duration","Date","now","Router","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"gmBAIO,SAASA,EAAMC,GAClB,OACI,sBAAMC,UAAU,QAAQC,wBAAyB,CAAEC,OAAO,uNAAD,OACmJH,EAAMI,KAAK,OAAO,GADrK,uK,MCA1D,SAASC,EAAKL,GAEjB,MAA8BM,IAAMC,UAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAaJ,IAAMK,OAAO,MAChC,EAA4BL,IAAMC,SAAS,GAA3C,mBAAOK,EAAP,KAAeC,EAAf,KAQA,OANAP,IAAMQ,WAAU,YACR,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAYK,WACjBN,EAAWT,EAAMgB,MACjBH,EAAUH,EAAWK,QAAQE,iBAC9B,CAACjB,EAAMgB,KAAMN,IAGZ,qBAAKT,UAAS,uBAAmBD,EAAMkB,UAAY,OAAS,GAA9C,YAAsDlB,EAAMmB,aAAe,kBAAoB,IAAOC,MAAO,CACvHR,OAAQZ,EAAMmB,aAAgBX,EAAUI,EAAS,EAAK,WAD1D,SAGI,qBAAKX,UAAS,eAAWO,EAAU,OAAS,GAA9B,YAAsCR,EAAMmB,aAAe,eAAiB,IAAOE,IAAKX,EAAtG,SACKV,EAAMsB,a,MCpBhB,SAASC,EAAT,GAAkC,IAAZD,EAAW,EAAXA,SAC5B,OACC,qBAAKrB,UAAU,cAAf,SACEqB,I,MCDG,SAASE,EAAT,GAA8C,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACjC,EAAoCpB,IAAMC,SAAS,IAAnD,mBAAOoB,EAAP,KAAmBC,EAAnB,KAEA,OACI,uBAAM3B,UAAU,WAAWwB,SAAU,SAACI,GAGlC,OAFAA,EAAEC,iBACFL,EAASE,IACF,GAHX,UAKI,uBACII,KAAK,OACL9B,UAAU,eACV+B,GAAG,eACHN,YAAaA,EACbO,MAAON,EACPO,SAAU,SAACL,GAAD,OAAOD,EAAcC,EAAEM,OAAOF,QACxCG,UAAQ,IAEZ,wBAAQnC,UAAU,oBAAlB,SACI,uBAAMA,UAAU,OAAhB,mBAA6B,sBAAMA,UAAU,QAAhB,SAAwB,cAAC,EAAD,c,MCrB9D,SAASoC,EAAT,GAA4C,IAAfC,EAAc,EAAdA,WAInC,OAFGA,GAAcA,EAAa,IAAGA,EAAaC,KAAKC,IAAI,GAAIF,EAAa,GAAKA,EAAa,MAEnFA,EAAa,EACnB,qBAAKrC,UAAU,cAAf,SACU,qBAAKA,UAAU,mBAAmBmB,MAAO,CAACqB,MAAM,GAAD,OAAKH,EAAL,UAEtD,cAAC,IAAMI,SAAP,ICuBE,IAAMC,EC8EF,CACHC,MAAO,CACHC,YAAa,GACbC,WAAY,EACZC,SAAU,GACVC,cAAe,KACfC,gBAAiB,GACjBC,cAAe,IAMnBC,OAbG,SAaIC,GAEH,OADAC,KAAKT,MAAMI,cAAgBI,EACpBC,MAUXC,WAzBG,YAyBuC,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAE3B,GAAIF,EAAU,EACV,MAAM,IAAIG,MAAM,uCACpB,GAAIH,EAAU,IAAMC,EAChB,MAAM,IAAIE,MAAJ,uCAA0CH,EAA1C,sCAuBV,OApBIA,EAAUF,KAAKT,MAAME,aACrBO,KAAKT,MAAME,WAAaS,GAE5BF,KAAKT,MAAMC,YAAYc,KAAKJ,GAI5BF,KAAKT,MAAMG,SAASQ,EAAQK,YAAc,CACtCL,QAASA,EACTM,OAAQL,EAAU,SAACM,GAGf,OAFAN,EAAQM,GACRA,EAAK,aAAeP,EACbO,GACP,KACJC,KAAMN,EAAS,WACX,IAAMK,EAAOL,IAEb,OADAK,EAAK,aAAeP,EACbO,GACP,MAEDT,MAUXW,eA/DG,YA+DqC,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,OAAQnC,EAAQ,EAARA,KAM3B,GAJKA,IACDA,EAAO,aAGNkC,GAAQA,EAAKE,cAAgBC,OAC9B,MAAM,IAAIV,MAAM,+BAEpB,IAAKQ,GAAUA,EAAOC,cAAgBE,SAClC,MAAM,IAAIX,MAAM,qCAEpB,IAAK,CAAC,WAAY,UAAUY,SAASvC,GACjC,MAAM,IAAI2B,MAAM,qDASpB,MALa,aAAT3B,EACAsB,KAAKT,MAAMK,gBAAgBgB,GAAQC,EACrB,WAATnC,IACLsB,KAAKT,MAAMM,cAAce,GAAQC,GAE9Bb,MAMXkB,MA3FG,WA6FC,IAAMC,EAAoBnB,KAAKT,MAAMC,YAAY4B,MAAK,SAACC,EAAEC,GAAH,OAAOD,EAAEC,KAS/D,GARAH,EAAkBI,SAAQ,SAACC,EAAGC,EAAGC,GAC7B,GAAU,IAAND,GAEAD,IAAME,EAAID,EAAE,GAAG,EACf,MAAM,IAAIpB,MAAM,+CAIK,IAAzBc,EAAkB,GAClB,MAAM,IAAId,MAAM,oDAGpB,IAAKL,KAAKT,MAAMG,SAASM,KAAKT,MAAME,WAAWc,YAAYG,KACvD,MAAM,IAAIL,MAAJ,6CAAgDL,KAAKT,MAAME,WAA3D,0CAGV,IAAKO,KAAKT,MAAMI,cACZ,MAAM,IAAIU,MAAM,gCAGpB,OAlOZ,SAA0BsB,GACtB,IAAMlB,EAAO,CACTf,SAAUiC,EAAEjC,SACZkC,eAAgBD,EAAElC,WAClBd,GAAIgD,EAAEhC,eAmGV,OAVAc,EAAKoB,IAjDL,WAAgB,IAAD,OAELC,EAAQ9B,KACVS,EAAOsB,aAAaC,QAAQhC,KAAKrB,IAGrC,GAAI8B,EACA,IAEI,KADAA,EAAOwB,KAAKC,MAAMzB,IACRK,YAEN,MADAqB,QAAQC,MAAR,iCAAwCpC,KAAKrB,GAA7C,yBACM,IAAI0B,MAAM,mCAEpB,GAAII,EAAKK,cAAgBuB,OAErB,MADAF,QAAQC,MAAR,iCAAwCpC,KAAKrB,GAA7C,sBACM,IAAI0B,MAAM,iCAEtB,MAAOiC,GAELH,QAAQC,MAAR,iDAAwDpC,KAAKrB,KAC7D8B,EAAO,KAyBf,OApBKA,IACDA,EAAOT,KAAKN,SAASM,KAAK4B,eAAerB,YAAYG,SAIzDD,EAAOT,KAAKQ,OAAOC,IAGd8B,KAAO,WACRR,aAAaS,QAAQV,EAAMnD,GAAIsD,KAAKQ,UAAUhC,KAIlD4B,OAAOK,QAAQf,EAAE/B,iBAAiB2B,SAAQ,YAAqB,IAAD,mBAAlBX,EAAkB,KAAZC,EAAY,KAC1D,QAAmB8B,IAAflC,EAAKG,GACL,MAAM,IAAIP,MAAJ,uBAA0BO,EAA1B,iCAAuD,EAAKjC,GAA5D,iBACV8B,EAAKG,GAAQC,EAAO+B,KAAKnC,MAItBA,GAIImC,KAAKnC,GACpBA,EAAKD,OAvFL,SAAgBqC,GACZ,IAAKA,EACD,MAAM,IAAIxC,MAAM,qCAKpB,SAFyBsC,IAArBE,EAAI,eACJA,EAAI,aAAe,GAChBA,EAAI,eAAiB7C,KAAK4B,gBAAgB,CAE7C,IAAI1B,EAAU2C,EAAI,cAAgB,EAQlC,GANI3C,EADAA,EAAQY,cAAgBgC,QAAU5C,EAAU,GACjC,IAEAA,EAAQ,GAAGK,YAIrBP,KAAKN,SAASQ,GAAU,CACzBiC,QAAQC,MAAR,sDAA6DpC,KAAKrB,GAAlE,gBACAkE,EAAM,KACN,MAIJA,EAAM7C,KAAKN,SAASQ,GAASM,OAAOqC,GAIxC,OAAY,OAARA,GACAV,QAAQC,MAAR,iCAAwCpC,KAAKrB,GAA7C,0CACOqB,KAAKN,SAASM,KAAK4B,eAAerB,YAAYG,QAIlDmC,GAqDUD,KAAKnC,GAG1B4B,OAAOK,QAAQf,EAAE9B,eAAe0B,SAAQ,YAAqB,IAAD,mBAAlBX,EAAkB,KAAZC,EAAY,KACxD,QAAmB8B,IAAflC,EAAKG,GACL,MAAM,IAAIP,MAAJ,uBAA0BO,EAA1B,qBAA2CH,EAAK9B,GAAhD,iBACV8B,EAAKG,GAAQC,EAAO+B,KAAK,OAGtBnC,EA2HQsC,CAAiB/C,KAAKT,SD/LpCO,OAAO,kBACPG,WAAW,CACRC,QAAS,EACTE,OAFQ,WAGJ,MAAO,MAGdc,Q,MElCE,SAAS8B,EAASrG,GACrB,IACIsG,EAGwB,MAJtBC,EAAe5D,EAAmBuC,MAEpC5C,EAAa,KAEE,UAAftC,EAAM+B,QACNuE,EAAQ,OAAGC,QAAH,IAAGA,GAAH,UAAGA,EAAevG,EAAMwG,eAAxB,iBAAG,EAA8BC,aAAjC,iBAAG,EAAsCzG,EAAM0G,aAA/C,aAAG,EAAmDC,QAG1DrE,EAAaC,KAAKqE,MAAON,EAASO,YAAcP,EAASQ,cAAiB,OAUlF,OACI,sBAAK7G,UAAU,WAAW8G,SAAU,EAAGC,WAP3C,SAAwBC,GACA,UAAfA,EAAMC,MAAmC,UAAfD,EAAMC,OAAqBlH,EAAMmH,SAC5DnH,EAAMmH,WAKyDA,QAAS,kBAAMnH,EAAMmH,SAAWnH,EAAMmH,WAAzG,UAEuB,cAAjBnH,EAAMwG,QACJ,qBAAKvG,UAAU,eAAf,SACI,qBAAK+B,GAAG,eAAeS,MAAM,KAAK7B,OAAO,KAAKwG,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAApF,SACI,sBAAMtC,EAAE,uQAAuQqC,KAAK,gBAKhS,qBAAKpH,UAAU,OAAf,SAEI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,YAAf,UACKD,EAAMuH,MADX,OAGI,uBAAMtH,UAAU,OAAhB,cAAyBD,EAAMwH,KAA/B,OACA,sBAAMvH,UAAU,wBAAhB,SAAyCD,EAAMyH,MAAN,cAAqBzH,EAAMyH,MAAMC,OAAjC,aAA4C1H,EAAMyH,MAAME,SAAY,YAKzH,sBAAK1H,UAAU,QAAf,UACI,uCAAUD,EAAM+B,QAChB,cAAC,EAAD,OAGJ,cAAC,EAAD,CAAmBO,WAAYtC,EAAMsC,YAAcA,O,MC/CxD,SAASsF,EAAS5H,GACrB,OACI,sBAAKC,UAAS,mBAAcD,EAAMgB,KAAO,GAAK,OAAhC,YAA0ChB,EAAM6H,OAAS,SAAW,IAAlF,UACM7H,EAAM8H,MAAQ9H,EAAM8H,KAAKC,OAAS,EAChC,4BAAI/H,EAAM8H,OAAa,KAC3B,qBAAK7H,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAYmB,MAAO,CAC9BqB,OAAQzC,EAAMsG,SAAWtG,EAAMgI,MAAQ,KAAKC,QAAQ,GAAK,YCd7E,IAAMC,EAAe5H,IAAM6H,cAAc,MAElC,SAASC,EAAcpI,GAC1B,MAAwBM,IAAMC,SAAS,UAAvC,mBAAO8H,EAAP,KAAaC,EAAb,KACA,EAA4BhI,IAAMC,SAAS,IAA3C,mBAAOgI,EAAP,KAAeC,EAAf,KACA,EAAoClI,IAAMC,SAAS,MAAnD,mBAAOkI,EAAP,KAAmBC,EAAnB,KAEA,OACI,cAACR,EAAaS,SAAd,CAAuB1G,MAAO,CAC1B2G,SAD0B,SACjBxF,GACLkF,EAAQlF,IAEZiF,OACAQ,aAAcL,EACdM,UAAWP,EACXE,aACAC,cAR0B,SAQZ1D,GACV0D,GAAc,SAAAK,GAAC,kCAASA,GAAK/D,OAEjCgE,gBAX0B,WAWNN,EAAc,QAXtC,SAaK1I,EAAMsB,WAKZ,SAAS2H,EAASjJ,GACrB,OAAOM,IAAM4I,WAAWhB,G,MCnBrB,SAASiB,EAAMnJ,GAClB,MAAwCiJ,IAAhCR,EAAR,EAAQA,WAAYO,EAApB,EAAoBA,gBACdI,EAAUC,cACVC,EAAOtJ,EAAMsJ,MAAQ,MAErBC,EAAavJ,EAAMuJ,YAAc,GACjCC,EAASxJ,EAAMwJ,QAAU,GAE/B,SAASC,IACDF,EAAWxB,OAAS,IACpBqB,EAAQzF,KAAR,WAAiB8E,EAAW1G,OAC5BiH,KAUR,OACI,gCACKQ,EAAOzB,OAAS,EACb,oBAAGZ,QAASsC,EAAmBxJ,UAAS,uBAAkBsJ,EAAWxB,OAAS,EAAI,oBAAsB,IAAMhB,SAAUwC,EAAWxB,OAAS,EAAI,OAAI/B,EAAWgB,WAT3K,SAAwBC,GACD,UAAfA,EAAMC,MAAmC,UAAfD,EAAMC,MAChCuC,KAOI,UACKF,EAAWxB,OAAS,EAAK,cAAC,EAAD,CAAO3H,MAAI,IAAM,KAAMoJ,KAErD,KACJ,oBAAIvJ,UAAW,UAAaqJ,EAAI,qBAAiBA,GAAS,IAA1D,SAAiEtJ,EAAMsB,c,MC/B5E,SAASoI,EAAT,GAAuE,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,SAA4B,IAAlBC,cAAkB,SACrEC,EAAgBH,EAAQI,WAAU,SAAAnF,GAAC,OAAIA,EAAE5C,QAAU4H,KACnDI,EAAkB,CACtBC,SAA4B,IAAnBH,EAAuB,EAAI,EACpCI,UAAU,cAAD,QAAmC,IAAnBJ,EAAuC,EAAhBA,EAAoB,EAA3D,SASX,OACE,sBAAK9J,UAAS,uBAAkB6J,EAAS,SAAW,IAApD,UACGF,EAAQQ,KAAI,SAAAvF,GAAC,OACZ,qBAEE5E,UAAS,iBAAY4J,IAAahF,EAAE5C,MAAQ,WAAa,IACzDkF,QAAS,kBAAMwC,EAAQ9E,EAAE5C,QACzB+E,YAbeqD,EAaYxF,EAAE5C,MAbJ,SAAAgF,GACZ,UAAfA,EAAMC,MAAmC,UAAfD,EAAMC,MAClCyC,EAAQU,KAYJtD,SAAU,EALZ,SAOGlC,EAAEyF,OANEzF,EAAE5C,OAVQ,IAAAoI,KAmBnB,qBAAKpK,UAAU,cAAcmB,MAAO6I,OChC1C,IAAMM,EAAQ,UAAMC,kDAAN,sB,4CAEd,WAA2B7I,EAAYI,GAAvC,uBAAA2C,EAAA,sEAEc+F,EAAO9I,EAAW+I,cAFhC,SAG8BC,MAAM,GAAD,OAAIH,kDAAJ,6CAAsF,SAATzI,EAAkB,KAAOA,EAAtG,kBAAoH0I,IAAQG,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAH3K,UAGc+C,EAHd,OAKcC,GAAM,IAAIC,WAAYC,gBAAgBH,EAAS,aAC/CI,EAAQC,MAAMC,KAAKL,EAAIM,iBAAiB,uCACxCC,EAAUJ,EAAMK,MAAM,EAAG,GAAGlB,KAAI,SAACmB,GACnC,IAGIhE,EACAC,EACAd,EALA3E,EAAOwJ,EAAKC,cAAc,mDAAmDC,aAAa,mBAO9F,GAAa,WANb1J,EAAgB,OAATA,EAAgB,OAASA,GAO5B,IACIwF,EAAQgE,EAAKC,cAAc,mDAAmDE,YAC9ElE,EAAO+D,EAAKC,cAAc,gDAAgDE,YAAYC,OAAOC,MAAM,KAAK,GACxGlF,EAAO6E,EAAKC,cAAc,mDAAmDC,aAAa,QAAQG,MAAM,KAAK,GAC/G,MAAO/J,GAEL,YAED,GAAa,SAATE,EACP,IACIwF,EAAQgE,EAAKC,cAAc,wDAAwDE,YACnFlE,EAAO+D,EAAKC,cAAc,gDAAgDE,YAAYC,OAAOC,MAAM,KAAK,GACxGlF,EAAO6E,EAAKC,cAAc,mDAAmDC,aAAa,QAAQG,MAAM,KAAK,GAC/G,MAAO/J,GAEL,OAIR,MAAO,CACHE,KAAMA,EACNwF,MAAOA,EACPC,KAAMA,EACNd,KAAMA,EAAO,IAAMa,EAAMsE,QAAQ,oBAAqB,KAAKA,QAAQ,OAAQ,KAAKnB,cAChFlE,OAAQ,eAIJuB,OAAS,GA5C7B,0CA6CmB,CAAE+D,QAAST,IA7C9B,iCA+CmB,CAAES,QAAS,CAAET,EAAQ,MA/CxC,gEAkDQ7F,QAAQC,MAAR,MACM,IAAI/B,MAAJ,MAnDd,2D,kEAuDA,WAA2BgD,GAA3B,2BAAAhC,EAAA,+EAIwBiG,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAzE,aAAyFkE,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAJlI,OAIQ+C,EAJR,wEAMwBF,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAKkF,MAAM,KAAK,GAAzF,aAAuGhB,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UANhJ,SAMQ+C,EANR,UASYnE,EAAOA,EAAKkF,MAAM,KAAK,IATnC,QAYUG,EAASb,MAAMC,MAAK,IAAIJ,WAAYC,gBAAgBH,EAAS,aAAaO,iBAAiB,wCAE7FY,EAAU,GACVC,EAAW,GAfnB,IAAAvH,EAAA,wCAAAA,EAAA,yDAiBawH,EAjBb,MAkBcpE,EAAOoE,EAAEV,cAAc,4CAA4CE,aAC/DpH,SAAS,UAnB3B,mEAqBcoD,EAASI,EAAK8D,MAAM,KAAK,GAE1BI,EAAQ1H,SAASoD,IAClBsE,EAAQrI,KAAK+D,GAGZuE,EAASvE,KACVuE,EAASvE,GAAU,IA5B/B,SA+B4BiD,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAzE,mBAAwFgB,IAAUkD,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UA/B/I,OA+BcqE,EA/Bd,OAgCwBjB,MAAMC,MAAK,IAAIJ,WAAYC,gBAAgBmB,EAAO,aAAaf,iBAAiB,gCACxFxG,SAAQ,SAAC/C,EAAGiD,GAAJ,OAAUmH,EAASvE,GAAQ/D,OAAOmB,MAjC1D,iDAiBkBiH,EAjBlB,wNAoCW,CAAEC,UAASC,aApCtB,0D,kEAuCA,WAA4BvF,EAAM3E,EAAM2F,EAAQC,GAAhD,uBAAAjD,EAAA,6DAIQ0H,EADS,SAATrK,EACG,UAAMwI,EAAN,oBAA0B7D,EAA1B,mBAAyCgB,EAAzC,oBAA2DC,GAE3D,UAAM4C,EAAN,kBAAwB7D,EAAxB,sBAA0CA,GANrD,SASsBiE,MAAMyB,GAAKxB,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAT7C,UASUuE,EATV,OAWUC,EAAUpB,MAAMC,MAAK,IAAIJ,WAAYC,gBAAgBqB,EAAK,aAAajB,iBAAiB,aACxFmB,EAAOD,EAAQE,MAAK,SAAC3K,GAAD,OAAOA,EAAE6J,YAAYpH,SAAS,uBAZ5D,uBAecR,EAAOwB,KAAKC,MAAMgH,EAAKb,aAfrC,kBAgBe,CAAEU,IAAKtI,EAAK9D,MAAMyM,UAAUC,WAhB3C,gCAmBW,CAAEN,IAAK,KAnBlB,6C,sBAsBA,IACeO,EADC,CAAEC,Y,8CAAaC,a,kDAAcC,Y,6CCtHvCvC,EAAQ,UAAMC,kDAAN,8C,4CAEd,WAA2B7I,EAAYI,GAAvC,uBAAA2C,EAAA,sEAEc+F,EAAO9I,EAAW+I,cAFhC,SAG8BC,MAAM,GAAD,OAAIH,kDAAJ,6CAAsF,SAATzI,EAAkB,KAAOA,EAAtG,kBAAoH0I,IAAQG,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAH3K,UAGc+C,EAHd,OAKcC,GAAM,IAAIC,WAAYC,gBAAgBH,EAAS,aAC/CI,EAAQC,MAAMC,KAAKL,EAAIM,iBAAiB,uCACxCC,EAAUJ,EAAMK,MAAM,EAAG,GAAGlB,KAAI,SAACmB,GACnC,IAGIhE,EACAC,EACAd,EALA3E,EAAOwJ,EAAKC,cAAc,mDAAmDC,aAAa,mBAO9F,GAAa,WANb1J,EAAgB,OAATA,EAAgB,OAASA,GAO5B,IACIwF,EAAQgE,EAAKC,cAAc,mDAAmDE,YAC9ElE,EAAO+D,EAAKC,cAAc,gDAAgDE,YAAYC,OAAOC,MAAM,KAAK,GACxGlF,EAAO6E,EAAKC,cAAc,mDAAmDC,aAAa,QAAQG,MAAM,KAAK,GAC/G,MAAO/J,GAEL,YAED,GAAa,SAATE,EACP,IACIwF,EAAQgE,EAAKC,cAAc,wDAAwDE,YACnFlE,EAAO+D,EAAKC,cAAc,gDAAgDE,YAAYC,OAAOC,MAAM,KAAK,GACxGlF,EAAO6E,EAAKC,cAAc,mDAAmDC,aAAa,QAAQG,MAAM,KAAK,GAC/G,MAAO/J,GAEL,OAIR,MAAO,CACHE,KAAMA,EACNwF,MAAOA,EACPC,KAAMA,EACNd,KAAMA,EAAO,IAAMa,EAAMsE,QAAQ,oBAAqB,KAAKA,QAAQ,OAAQ,KAAKnB,cAChFlE,OAAQ,kBAIJuB,OAAS,GA5C7B,0CA6CmB,CAAE+D,QAAST,IA7C9B,iCA+CmB,CAAES,QAAS,CAAET,EAAQ,MA/CxC,gEAkDQ7F,QAAQC,MAAR,MACM,IAAI/B,MAAJ,MAnDd,2D,kEAuDA,WAA2BgD,GAA3B,2BAAAhC,EAAA,+EAIwBiG,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAzE,aAAyFkE,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAJlI,OAIQ+C,EAJR,wEAMwBF,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAKkF,MAAM,KAAK,GAAzF,aAAuGhB,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UANhJ,SAMQ+C,EANR,UASYnE,EAAOA,EAAKkF,MAAM,KAAK,IATnC,QAYUG,EAASb,MAAMC,MAAK,IAAIJ,WAAYC,gBAAgBH,EAAS,aAAaO,iBAAiB,wCAE7FY,EAAU,GACVC,EAAW,GAfnB,IAAAvH,EAAA,wCAAAA,EAAA,yDAiBawH,EAjBb,MAkBcpE,EAAOoE,EAAEV,cAAc,4CAA4CE,aAC/DpH,SAAS,UAnB3B,mEAqBcoD,EAASI,EAAK8D,MAAM,KAAK,GAE1BI,EAAQ1H,SAASoD,IAClBsE,EAAQrI,KAAK+D,GAGZuE,EAASvE,KACVuE,EAASvE,GAAU,IA5B/B,SA+B4BiD,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAzE,mBAAwFgB,IAAUkD,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UA/B/I,OA+BcqE,EA/Bd,OAgCwBjB,MAAMC,MAAK,IAAIJ,WAAYC,gBAAgBmB,EAAO,aAAaf,iBAAiB,gCACxFxG,SAAQ,SAAC/C,EAAGiD,GAAJ,OAAUmH,EAASvE,GAAQ/D,OAAOmB,MAjC1D,iDAiBkBiH,EAjBlB,wNAoCW,CAAEC,UAASC,aApCtB,0D,kEAuCA,WAA4BvF,EAAM3E,EAAM2F,EAAQC,GAAhD,eAAAjD,EAAA,2DAIQ0H,EADS,SAATrK,EACG,UAAMwI,EAAN,YAAkB7D,EAAKkF,MAAM,KAAK,GAAlC,aAAyClE,EAAzC,YAAmDC,GAEnD,UAAM4C,EAAN,YAAkB7D,EAAKkF,MAAM,KAAK,KAN7C,yCAUe,CAAEQ,IAAKA,IAVtB,gCAaW,CAAEA,IAAK,KAblB,4C,sBAgBA,IACeW,EADI,CAAEH,Y,8CAAaC,a,kDAAcC,Y,6CChH1CvC,EAAQ,UAAMC,kDAAN,gC,4CAEd,WAA2B7I,EAAYI,GAAvC,yBAAA2C,EAAA,yDACiB,SAAT3C,EADR,yCACgC,CAAE+J,QAAS,KAD3C,uBAGckB,EAHd,UAG6BzC,EAH7B,0BAGuD5I,EAAWkK,QAAQ,KAAM,MAHhF,SAIgClB,MAAMqC,GAAWpC,MAAK,SAAC5F,GAAD,OAAOA,EAAE8C,UAJ/D,cAIcmF,EAJd,OAMcC,EAAS,IAAInC,UACbD,EAAMoC,EAAOlC,gBAAgBiC,EAAW,aACxChC,EARd,YAQ0BH,EAAIM,iBAAiB,UACjCC,EAAUJ,EAAMb,KAAI,SAAAmB,GACtB,IACM4B,EADQ5B,EAAKC,cAAc,KAAKjE,MAAMsE,QAAQ,KAAM,KAAKF,OACtCC,MAAM,KAE/B,OADAuB,EAAWC,QAAQ,GACZ,CACHrL,OACAwF,MAAO4F,EAAWE,KAAK,KACvB7F,KAAM+D,EAAKC,cAAc,cAAc8B,UAAU1B,MAAM,KAAK2B,MAAM3B,MAAM,KAAK4B,QAC7E9G,KAAM+G,mBAAmBlC,EAAKC,cAAc,KAAKkC,KAAK9B,MAAM,KAAK2B,OACjE/G,OAAQ,gBAlBxB,kBAsBe,CAAEsF,QAAST,IAtB1B,2DAwBe,CAAES,QAAS,KAxB1B,2D,kEA4BA,WAA4BpF,GAA5B,mBAAAhC,EAAA,6DACU0H,EADV,UACmB7B,EADnB,YAC+BoD,mBAAmBjH,IADlD,SAGsBiE,MAAMyB,GAAKxB,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAH7C,cAGUuE,EAHV,OAIUuB,GAAM,IAAI7C,WAAYC,gBAAgBqB,EAAK,aAJrD,kBAMW,CAAED,IAAI,GAAD,OAAKwB,EAAIpC,cAAc,UAAUqC,OANjD,4C,sBASA,IACeC,EADG,CAAElB,Y,8CAAaC,a,6CCvC3BtC,EAAQ,UAAMC,kDAAN,sB,4CAEd,WAA2B7I,EAAYI,GAAvC,uBAAA2C,EAAA,sEAEc+F,EAAO9I,EAAW+I,cAFhC,SAG8BC,MAAM,GAAD,OAAIH,kDAAJ,6CAAsF,SAATzI,EAAkB,KAAOA,EAAtG,kBAAoH0I,IAAQG,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAH3K,UAGc+C,EAHd,OAKcC,GAAM,IAAIC,WAAYC,gBAAgBH,EAAS,aAC/CI,EAAQC,MAAMC,KAAKL,EAAIM,iBAAiB,uCACxCC,EAAUJ,EAAMK,MAAM,EAAG,GAAGlB,KAAI,SAACmB,GACnC,IAGIhE,EACAC,EACAd,EALA3E,EAAOwJ,EAAKC,cAAc,mDAAmDC,aAAa,mBAO9F,GAAa,WANb1J,EAAgB,OAATA,EAAgB,OAASA,GAO5B,IACIwF,EAAQgE,EAAKC,cAAc,mDAAmDE,YAC9ElE,EAAO+D,EAAKC,cAAc,gDAAgDE,YAAYC,OAAOC,MAAM,KAAK,GACxGlF,EAAO6E,EAAKC,cAAc,mDAAmDC,aAAa,QAAQG,MAAM,KAAK,GAC/G,MAAO/J,GAEL,YAED,GAAa,SAATE,EACP,IACIwF,EAAQgE,EAAKC,cAAc,wDAAwDE,YACnFlE,EAAO+D,EAAKC,cAAc,gDAAgDE,YAAYC,OAAOC,MAAM,KAAK,GACxGlF,EAAO6E,EAAKC,cAAc,mDAAmDC,aAAa,QAAQG,MAAM,KAAK,GAC/G,MAAO/J,GAEL,OAIR,MAAO,CACHE,KAAMA,EACNwF,MAAOA,EACPC,KAAMA,EACNd,KAAMA,EAAO,IAAMa,EAAMsE,QAAQ,oBAAqB,KAAKA,QAAQ,OAAQ,KAAKnB,cAChFlE,OAAQ,eAIJuB,OAAS,GA5C7B,0CA6CmB,CAAE+D,QAAST,IA7C9B,iCA+CmB,CAAES,QAAS,CAAET,EAAQ,MA/CxC,gEAkDQ7F,QAAQC,MAAR,MACM,IAAI/B,MAAJ,MAnDd,2D,kEAuDA,WAA2BgD,GAA3B,2BAAAhC,EAAA,+EAIwBiG,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAzE,aAAyFkE,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAJlI,OAIQ+C,EAJR,wEAMwBF,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAKkF,MAAM,KAAK,GAAzF,aAAuGhB,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UANhJ,SAMQ+C,EANR,UASYnE,EAAOA,EAAKkF,MAAM,KAAK,IATnC,QAYUG,EAASb,MAAMC,MAAK,IAAIJ,WAAYC,gBAAgBH,EAAS,aAAaO,iBAAiB,wCAE7FY,EAAU,GACVC,EAAW,GAfnB,IAAAvH,EAAA,wCAAAA,EAAA,yDAiBawH,EAjBb,MAkBcpE,EAAOoE,EAAEV,cAAc,4CAA4CE,aAC/DpH,SAAS,UAnB3B,mEAqBcoD,EAASI,EAAK8D,MAAM,KAAK,GAE1BI,EAAQ1H,SAASoD,IAClBsE,EAAQrI,KAAK+D,GAGZuE,EAASvE,KACVuE,EAASvE,GAAU,IA5B/B,SA+B4BiD,MAAM,GAAD,OAAIH,kDAAJ,yCAAyE9D,EAAzE,mBAAwFgB,IAAUkD,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UA/B/I,OA+BcqE,EA/Bd,OAgCwBjB,MAAMC,MAAK,IAAIJ,WAAYC,gBAAgBmB,EAAO,aAAaf,iBAAiB,gCACxFxG,SAAQ,SAAC/C,EAAGiD,GAAJ,OAAUmH,EAASvE,GAAQ/D,OAAOmB,MAjC1D,iDAiBkBiH,EAjBlB,wNAoCW,CAAEC,UAASC,aApCtB,0D,kEAuCA,WAA4BvF,EAAM3E,EAAM2F,EAAQC,GAAhD,2BAAAjD,EAAA,yDAGiB,UAAT3C,EAHR,gCAI8B4I,MAAM,sCAAD,OAAuCjE,EAAvC,6DAAuGkE,MAAK,SAAAmD,GAAI,OAAIA,EAAKA,UAJ5J,OAIYC,EAJZ,OAKQxG,EAAOwG,EAAUC,aAAarC,MAAM,KAAK,GALjD,cASQQ,EADS,SAATrK,EACG,UAAMwI,EAAN,qBAA2B7D,EAAKwH,OAAOxH,EAAKyH,QAAQ,KAAK,GAAGtC,QAAQ,OAAQ,KAAKA,QAAQ,IAAK,IAAInB,cAAlG,mBAA0HhD,EAA1H,oBAA4IC,EAA5I,UAEA,UAAM4C,EAAN,mBAAyB7D,EAAKwH,OAAOxH,EAAKyH,QAAQ,KAAK,GAAGtC,QAAQ,OAAQ,KAAKA,QAAQ,IAAK,IAAInB,cAAhG,YAAiHlD,EAAjH,UAXX,SAcsBmD,MAAMyB,GAAKxB,MAAK,SAAA5F,GAAC,OAAIA,EAAE8C,UAd7C,UAcUuE,EAdV,OAgBUC,EAAUpB,MAAMC,MAAK,IAAIJ,WAAYC,gBAAgBqB,EAAK,aAAajB,iBAAiB,aACxFmB,EAAOD,EAAQE,MAAK,SAAC3K,GAAD,OAAOA,EAAE6J,YAAYpH,SAAS,sBAjB5D,wBAoBcR,EAAOyI,EAAKb,YAAYG,QAAQ,OAAQ,IAAID,MAAM,KAAKY,MAAK,SAAC3K,GAAD,OAAOA,EAAEyC,SAAS,qBAAmBsH,MAAM,KAAKY,MAAK,SAAC3K,GAAD,OAAOA,EAAEyC,SAAS,qBApBjJ,kBAqBe,CAAE8H,IAAK5B,kDAAuC1G,IArB7D,iCAwBW,CAAEsI,IAAK,KAxBlB,6C,sBA2BA,IACegC,EADC,CAAExB,Y,8CAAaC,a,kDAAcC,Y,sDCtH9BF,E,gFAAf,WAA2BjL,EAAYI,GAAvC,eAAA2C,EAAA,6DACU2G,EAAU,CAAES,QAAS,IAD/B,SAE0BuC,QAAQC,IAAI,CAC9BvB,EAAWH,YAAYjL,EAAYI,GACnC4K,EAAQC,YAAYjL,EAAYI,GAChCqM,EAAQxB,YAAYjL,EAAYI,GAChC+L,EAAUlB,YAAYjL,EAAYI,KAN1C,qBASY6C,SAAQ,SAAC2J,GACRA,GAAMA,EAAEzC,SAEbyC,EAAEzC,QAAQlH,SAAQ,SAACE,GACVA,GACLuG,EAAQS,QAAQnI,KAAKmB,SAdjC,kBAkBWuG,GAlBX,4C,+BAqBewB,E,sFAAf,WAA4BnG,EAAM3E,EAAMyE,EAAQkB,EAAQC,GAAxD,SAAAjD,EAAA,2DACY8B,EADZ,OAEa,eAFb,OAIa,YAJb,OAMa,YANb,OAQa,cARb,wCAGyBuG,EAAWF,aAAanG,EAAM3E,EAAM2F,EAAQC,GAHrE,+DAKyBgF,EAAQE,aAAanG,EAAM3E,EAAM2F,EAAQC,GALlE,gEAOyByG,EAAQvB,aAAanG,EAAM3E,EAAM2F,EAAQC,GAPlE,kEASyBmG,EAAUjB,aAAanG,GAThD,wH,+BAeeoG,G,mFAAf,WAA2BpG,EAAMF,GAAjC,SAAA9B,EAAA,2DACY8B,EADZ,OAEa,eAFb,OAIa,YAJb,OAMa,YANb,uCAGyBuG,EAAWD,YAAYpG,GAHhD,+DAKyBiG,EAAQG,YAAYpG,GAL7C,gEAOyB0H,EAAQtB,YAAYpG,GAP7C,wH,4BCxBO,SAAS8H,KAAc,IAAD,EACzB,EAAkDvF,IAA1CL,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcH,EAAhC,EAAgCA,cAE1BU,EAAUC,cACVoF,EAAaC,YAAc,UAC3B3M,EAAI,OAAG0M,QAAH,IAAGA,GAAH,UAAGA,EAAYE,cAAf,aAAG,EAAoB5M,KAC3B6M,EAAmBF,YAAc,+BAGvC,EAA8BpO,IAAMC,SAAS,IAA7C,mBAAOuL,EAAP,KAAgB+C,EAAhB,KACA,EAAgCvO,IAAMC,SAAS,GAA/C,mBAAO+F,EAAP,KAAiBwI,EAAjB,KACA,EAAwBxO,IAAMC,SAAS,IAAvC,mBAAOuH,EAAP,KAAaiH,EAAb,KACA,EAA4BzO,IAAMC,UAAS,GAA3C,mBAAOsH,EAAP,KAAemH,EAAf,KACA,EAA4C1O,IAAMC,UAAS,GAA3D,mBAAO0O,EAAP,KAAuBC,EAAvB,KACA,EAAsC5O,IAAMC,UAAS,GAArD,mBAAO4O,EAAP,KAAoBC,GAApB,KACA,GAAwB9O,IAAMC,SAAS,UAAvC,qBAAO8H,GAAP,MAAaC,GAAb,MACA,GAAgDhI,IAAMC,SAAS,IAA/D,qBAAO8O,GAAP,MAAyBC,GAAzB,MAEMC,GAAO,SAACnM,GACV0L,EAXa,GAYbC,EAAQ3L,GACR4L,GAAU,IArBW,SAwBVQ,GAxBU,yFAwBzB,WAAyBjI,EAAOb,EAAM3E,EAAMyE,EAAQgB,GAApD,6BAAA9C,EAAA,yDACImE,EAAa,IADjB,SAIQiG,EAAY,GACZC,EAAQ,uBAAD,OAAwBxH,EAAxB,MAEHyE,EAAU,GACVC,EAAW,GACF,SAATlK,EATZ,iCAU+B+K,GAAYpG,EAAMF,GAVjD,OAUkB1C,EAVlB,OAWYkI,EAAUlI,EAAKkI,QACfC,EAAWnI,EAAKmI,SAZ5B,WAeYwD,EAAU,GACVC,EAAY,GAEH,UAAT3N,EAlBZ,kCAmBmD8K,EAAanG,EAAM3E,EAAMyE,GAnB5E,oBAmBoB4F,EAnBpB,EAmBoBA,IAAgBuD,EAnBpC,EAmByBD,UAED,KAARtD,EArBhB,0CAsBuBmD,GAAK,cAAD,OAAehI,KAtB1C,QAyBYkI,EAAUrD,EACVsD,EAAYC,EA1BxB,QA6BQb,EA7CS,GA8CTjG,EAAa4G,GACb/G,EAAc,CACVnB,QACAxF,OACAiK,UACAC,WACAvF,OACAF,SACAgB,OACAkI,cAEJX,EAAQ,gBACRnG,EAAS,SA1CjB,kDA4CQpD,QAAQC,MAAR,MACA8J,GAAK,wBA7Cb,2DAxByB,oEAyEzB,WAA2BK,EAAOC,GAAlC,6BAAAnL,EAAA,6DACIsK,GAAU,GACVD,EAAQ,iBAAD,OAAkBc,EAAlB,aAAkCD,EAAlC,MACPd,EAAY,GACZI,GAAkB,GAJtB,kBAOkCtC,EAAYgD,EAAOC,GAPrD,mBAS+B,KAFf/D,EAPhB,EAOgBA,SAEI/D,OATpB,0CAUmBwH,GAAK,uBAAD,OAAwBM,KAV/C,aAWmB/D,EAAQ/D,OAAS,GAXpC,wBAYY+G,EAAY,GACZC,EAAQ,eAAD,OAAgBc,IACvBhB,EAAW/C,GACXoD,GAAkB,GAf9B,6BAmBoDpD,EAAQ,GAA5CvE,EAnBhB,EAmBgBA,MAAOb,EAnBvB,EAmBuBA,KAAM3E,EAnB7B,EAmB6BA,KAAMyE,EAnBnC,EAmBmCA,OAAQgB,EAnB3C,EAmB2CA,KACnC4B,EAAQzF,KAAR,UAAgB8K,EAAWrC,IAA3B,YAAkC5F,EAAlC,YAA4Ce,EAA5C,YAAqDb,IACrD8I,GAAUjI,EAAOb,EAAM3E,EAAMyE,EAAQgB,GArB7C,kDAuBQhC,QAAQC,MAAR,MACA8J,GAAK,kBAAD,OAAmBM,IAxB/B,2DAzEyB,sBA4LzB,GAvFAvP,IAAMQ,WAAU,WAAM,4CAClB,sBAAA4D,EAAA,sEACUiG,MAAMH,mDAAsCsF,OAAM,WAEpDV,GAAe,qEAHvB,4CADkB,uBAAC,WAAD,wBAOlBW,KACD,IAEHzP,IAAMQ,WAAU,WACZ,GAAI8N,EAAkB,CAClB,GAAsC,WAAlB,OAAhBA,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBD,OAAO5M,OAAqD,SAAjC6M,EAAiBD,OAAO5M,KACpE,OAAOqN,GAAe,qDAD+DI,GAAUZ,EAAiBD,OAAOpH,MAAOqH,EAAiBD,OAAOjI,KAAMkI,EAAiBD,OAAO5M,KAAM6M,EAAiBD,OAAOnI,WAI5N,IAEHlG,IAAMQ,WAAU,WACZ,IAAMyF,EAAe5D,EAAmBuC,MACpC8K,EAAsB,GAE1BtK,OAAOuK,KAAK1J,GAAc3B,SAAQ,SAAC4B,GAAY,IAAD,UACpC8H,EAAG,sBACF5I,OAAOK,QAAP,oBAAeQ,EAAaC,UAA5B,aAAe,EAAsBxF,YAArC,QAA6C,KAD3C,YAEF0E,OAAOK,QAAP,oBAAeQ,EAAaC,UAA5B,aAAe,EAAsBC,aAArC,QAA8C,MAHX,cAMf6H,GANe,IAM1C,2BACI,IAD6B,IAAD,yBAApB5H,EAAoB,KAAd5C,EAAc,KAC5B,MAAyB4B,OAAOwK,OAAOpM,GAAvC,eAA8C,CAAzC,IAAIqM,EAAY,KACbC,EAAQ,CACR1J,OACA5C,KAAMqM,EACNpO,KAAMoO,EAAanP,KAAO,OAAS,QACnCqP,eAAgB9N,KAAKqE,MAAOuJ,EAAatJ,YAAcsJ,EAAarJ,cAAiB,KACrFN,UAMJ,GAAK2J,EAAaG,KAElB,GAAIF,EAAMC,eAAiB,GACvBL,EAAoBrM,KAAKyM,OAEtB,CAAC,IAAD,UAEH,IAAKD,EAAanP,KAAM,SAExB,IAAIuP,EAAU,GAGd,GAAIJ,EAAaG,KAAKrE,SAASkE,EAAanP,KAAK0G,QAAQpD,SAArD,UAAiEkM,SAASL,EAAanP,KAAK2G,SAAW,IACvG4I,EAAQ7I,OAASyI,EAAanP,KAAK0G,OACnC6I,EAAQ5I,QAAR,UAAqB6I,SAASL,EAAanP,KAAK2G,SAAW,GAC3DyI,EAAMC,eAAiB,MAEpB,gBAAIF,EAAaG,KAAKrE,gBAAtB,iBAAI,YAAgCuE,SAASL,EAAanP,KAAK0G,QAAU,WAAzE,aAAI,EAA4E,IAMnF,SALA6I,EAAQ7I,OAAR,UAAoB8I,SAASL,EAAanP,KAAK0G,QAAU,GACzD6I,EAAQ5I,QAAUwI,EAAaG,KAAKrE,SAAlB,UAA8BuE,SAASL,EAAanP,KAAK0G,QAAU,IAAK,GAC1F0I,EAAMC,eAAiB,EAW3B,GAJAD,EAAMtM,KAAK9C,KAAX,eAAuBuP,GAGR,OAAGhK,QAAH,IAAGA,GAAH,UAAGA,EAAeC,UAAlB,iBAAG,EAAwBxF,YAA3B,iBAAG,EAA+B0F,UAAlC,aAAG,YAA0C0J,EAAMtM,KAAK9C,KAAK0G,OAA1D,YAAoE0I,EAAMtM,KAAK9C,KAAK2G,UACrF,SAEjBqI,EAAoBrM,KAAKyM,KApDK,8BAyD1CJ,EAAsBA,EAAoBvL,MAAK,SAACC,EAAGC,GAC/C,OAAOA,EAAEb,KAAK2M,UAAY/L,EAAEZ,KAAK2M,aAGrCnB,GAAoBU,QAEzB,KAEEjO,GAAkB,UAATA,GAA6B,SAATA,EAC9B,OAAO,cAAC,IAAD,CAAU2O,GAAG,UAGxB,IAAMC,GAAiB,SAAAtI,GAAI,OAAI,SAAApB,GACR,UAAfA,EAAMC,MAAmC,UAAfD,EAAMC,MAChCoB,GAAQD,KAIhB,OACI,sBAAKpI,UAAU,WAAf,UACI,cAAC2Q,EAAA,EAAD,UACI,kCAAiB,UAAT7O,EAAmB,SAAW,QAAtC,eAIJ,gCACI,sBAAM9B,UAAoB,WAAToI,GAAoB,gBAAkB,GAAIlB,QAAS,kBAAMmB,GAAQ,WAAWtB,WAAY2J,GAAe,UAAW5J,SAAU,EAA7I,oBACCsI,GAAiBtH,OAAS,EACvB,sBAAM9H,UAAoB,aAAToI,GAAsB,gBAAkB,GAAIlB,QAAS,kBAAMmB,GAAQ,aAAatB,WAAY2J,GAAe,YAAa5J,SAAU,EAAnJ,+BACE,MAIA,WAATsB,GACG,eAAC,IAAM3F,SAAP,WACI,eAAC,EAAD,WACKyM,EAAc,cAAC,EAAD,UAAcA,IAA6B,GAC1D,cAAC,EAAD,CAAO3F,OAAO,oFAAd,sCAGA,cAAC,EAAD,CACIG,QAAS,SAAC5H,GAAD,OAAUqH,EAAQzF,KAAR,WAAiB5B,KACpC6H,QAAS,CACL,CAAEU,MAAO,UAAWrI,MAAO,QAC3B,CAAEqI,MAAO,QAASrI,MAAO,UAE7B6H,QAAQ,EACRD,SAAU9H,IAEd,cAAC,EAAD,CAAUL,YAAsB,UAATK,EAAmB,mBAAqB,kBAAmBN,SAAU,SAAC2B,GAAD,OArOvF,8CAqOgGyN,CAAYzN,EAAKrB,MACtH,cAAC,EAAD,CAAUf,KAAMsF,EAAW,EAAGuB,OAAQA,EAAQvB,SAAUA,EAAU0B,MA9NrE,EA8NsFF,KAAMA,OAG7F,eAAC,EAAD,CAAM9G,KAAMiO,EAAgB9N,cAAY,EAAxC,UACI,eAAC,EAAD,CAAOmI,KAAK,SAAZ,yBACiBvH,EADjB,iBAGC2D,OAAOK,QAAQ+F,EAAQgF,QAAO,SAACpM,EAAGG,GAG/B,OAFKH,EAAEG,EAAE2B,UAAS9B,EAAEG,EAAE2B,QAAU,IAChC9B,EAAEG,EAAE2B,QAAQ7C,KAAKkB,GACVH,IACR,KAAK0F,KAAI,SAAAvF,GAAC,OACT,gCACI,mBAAG5E,UAAU,SAAb,SAAuB4E,EAAE,KACxBA,EAAE,GAAGuF,KAAI,SAACvF,EAAGC,GAAJ,OACN,cAAC,EAAD,CAAkByC,MAAO1C,EAAE0C,MAAOb,KAAM7B,EAAE6B,KAAM3E,KAAM8C,EAAE9C,KAAMyF,KAAM3C,EAAE2C,KAAMhB,OAAQ3B,EAAE2B,OAAQW,QAAS,WACnGiC,EAAQzF,KAAR,UAAgB8K,EAAWrC,IAA3B,YAAkCvH,EAAE2B,OAApC,YAA8C3B,EAAE0C,MAAhD,YAAyD1C,EAAE6B,OAC3DwI,GAAkB,GAClBM,GAAU3K,EAAE0C,MAAO1C,EAAE6B,KAAM7B,EAAE9C,KAAM8C,EAAE2B,OAAQ3B,EAAE2C,QAHpC1C,QAHbD,EAAE,aAYJ,cAAC,IAAMnC,SAAP,IAGvB2M,GAAiBtH,OAAS,GAAc,aAATM,GAAsB,eAAC,EAAD,WAClD,cAAC,EAAD,gCACA,cAAC,EAAD,CAAUrH,KAAMsF,EAAW,EAAGuB,OAAQA,EAAQvB,SAAUA,EAAU0B,MA3P7D,EA2P8EF,KAAMA,IAFvC,OAGjDuH,SAHiD,IAGjDA,QAHiD,EAGjDA,GAAkBjF,KAAI,SAACvF,EAAGC,GAAJ,OACnB,qCACI,cAAC,EAAD,CAAkByC,MAAO1C,EAAEf,KAAKwM,KAAK/I,MAAOb,KAAM7B,EAAEf,KAAKwM,KAAK5J,KAAM3E,KAAM8C,EAAE9C,KAAMyF,KAAM3C,EAAEf,KAAKwM,KAAK9I,KAAMhB,OAAQ3B,EAAE2B,OAAQiB,MAAO5C,EAAEf,KAAK9C,KAAMsB,WAAYuC,EAAEwL,eAAgBU,WAAS,EAAC5J,QAAS,WAC9K,SAAXtC,EAAE9C,KACFqH,EAAQzF,KAAR,gBAAsBkB,EAAE2B,OAAxB,YAAkC3B,EAAEf,KAAKwM,KAAK/I,MAA9C,YAAuD1C,EAAE6B,KAAzD,mBAAwE7B,EAAEf,KAAK9C,KAAK0G,OAApF,oBAAsG7C,EAAEf,KAAK9C,KAAK2G,UAElHyB,EAAQzF,KAAR,iBAAuBkB,EAAE2B,OAAzB,YAAmC3B,EAAEf,KAAKwM,KAAK/I,MAA/C,YAAwD1C,EAAE6B,OAG9DwI,GAAkB,GAClBM,GAAU3K,EAAEf,KAAKwM,KAAK/I,MAAO1C,EAAEf,KAAKwM,KAAK5J,KAAM7B,EAAE9C,KAAM8C,EAAE2B,OAAQ3B,EAAEf,KAAKwM,KAAK9I,QARlE1C,GAUf,sBAAK7E,UAAU,SAASkH,QAAS,WACjCmI,IAAoB,SAAA0B,GAAK,OAAIA,EAAMC,QAAO,SAAAjM,GAAC,OAAIA,IAAMH,QACrD,IAAIqM,EAAevO,EAAmBuC,MACvB,SAAXL,EAAE9C,aACKmP,EAAarM,EAAE2B,QAAQ3B,EAAE9C,MAAM8C,EAAE6B,MAAM7B,EAAEf,KAAK9C,KAAK0G,OAAS,IAAM7C,EAAEf,KAAK9C,KAAK2G,SACrFuJ,EAAatL,gBAENsL,EAAarM,EAAE2B,QAAQ3B,EAAE9C,MAAM8C,EAAE6B,MAAjC,KACPwK,EAAatL,QAGbsL,EAAarM,EAAE2B,UAAY,YACpB0K,EAAarM,EAAE2B,QACtB0K,EAAatL,OACbuL,OAAOC,SAASC,UAGhBH,EAAarM,EAAE2B,QAAQ3B,EAAE9C,QAAU,YAC5BmP,EAAarM,EAAE2B,QAAQ3B,EAAE9C,MAChCmP,EAAatL,QAEbsL,EAAarM,EAAE2B,QAAQ3B,EAAE9C,MAAM8C,EAAE6B,QAAU,YACpCwK,EAAarM,EAAE2B,QAAQ3B,EAAE9C,MAAM8C,EAAE6B,MACxCwK,EAAatL,SAvBjB,UA0BI,mBAAGxE,MAAO,CAACkQ,MAAM,WAAjB,oBACA,oBAAGlQ,MAAO,CAACmQ,YAAY,QAAQD,MAAM,WAArC,UAAkDzM,EAAEf,KAAKwM,KAAK/I,MAA9D,KAAuE1C,EAAEf,KAAKwM,KAAK9I,KAAnF,KAAsG,SAAX3C,EAAE9C,KAAF,cAA2B8C,EAAEf,KAAK9C,KAAK0G,OAAvC,aAAkD7C,EAAEf,KAAK9C,KAAK2G,SAAY,kBAI3K,cAAC,IAAMjF,SAAP,IAEV,qBAAKzC,UAAU,kBAAf,SACI,oBAAGyN,KAAK,2BAA2BvL,OAAO,SAASqP,IAAI,aAAvD,yBAAgF,cAAC,EAAD,Y,8BChUzF,SAASC,GAAiBzR,GAChC,OACC,qBAAKC,UAAU,mBAAf,SACC,qBAAKA,UAAU,sBAAf,SACC,4BAAID,EAAMsB,e,MCIP,SAASoQ,GAAT,GAA6F,IAArE5I,EAAoE,EAApEA,UAAW6I,EAAyD,EAAzDA,QAAS7C,EAAgD,EAAhDA,YAAa8C,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAWpJ,EAAc,EAAdA,WACjF,EAA0BnI,IAAMC,UAAS,GAAzC,mBAAOkF,EAAP,KAAcqM,EAAd,KAEA,SAASC,IACDF,IACAD,EAAS7Q,QAAQiR,YAAcH,GAyBvC,OAtBAvR,IAAMQ,WAAU,WACZ,IAAKgI,EAAUxE,SAAS,UACfwE,EAAUxE,SAAS,eAAgB,CAEpC,GADAwN,GAAS,IACJF,IAAaA,EAAS7Q,UAAY+H,GAAkC,IAArBA,EAAUf,QAAgB4J,EAAS,OAEvF,IAAMM,EAAM,IAAIC,KAEhB,IAAKA,KAAIC,eAAiBP,EAAS7Q,QAAQqR,YAAY,iCAEnD,YADAR,EAAS7Q,QAAQ8M,IAAM/E,GAEpB,IAAKoJ,KAAIC,cAEZ,YADAL,GAAS,GAIbG,EAAII,YAAYT,EAAS7Q,SACzBkR,EAAIK,WAAWxJ,MAGxB,CAAC8I,EAAU9I,EAAW6I,IAErBlM,EACQ,cAAC,GAAD,4CAERkM,EACO,cAAC,GAAD,iCAEN7I,GAAkC,IAArBA,EAAUf,OAGvBe,EAAUxE,SAAS,SAChBwE,EAAUxE,SAAS,eAgBnB,wBAAOiO,YAAY,YAAYtS,UAAU,eAAeoB,IAAKuQ,EAAUY,UAAQ,EAACC,UAAQ,EAACC,WAAY5D,EAAa6D,aAAcZ,EAAhI,UACMtJ,EAAWiH,WAAajH,EAAWiH,UAAUtF,KAAI,SAACwI,EAAKC,GAAN,OAAgB,uBAAmBC,KAAK,WAAWxI,MAAOsI,EAAIG,SAAUlF,IAAG,UAAKrD,kDAAL,+BAAgEoI,EAAII,OAAnHH,MAC/E,wBAAQhF,IAAK/E,EAAW/G,KAAK,iBAT7B,uBAAOwQ,YAAY,YAAYtS,UAAU,eAAeoB,IAAKuQ,EAAUY,UAAQ,EAACC,UAAQ,EAACC,WAAY5D,EAAa6D,aAAcZ,EAAhI,SACMtJ,EAAWiH,WAAajH,EAAWiH,UAAUtF,KAAI,SAACwI,EAAKC,GAAN,OAAgB,uBAAmBC,KAAK,WAAWxI,MAAOsI,EAAIG,SAAUlF,IAAG,UAAKrD,kDAAL,+BAAgEoI,EAAII,OAAnHH,QAbpF,cAAC,GAAD,gC,MCxCR,SAASI,GAAT,GAAyD,IAA/BtJ,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAM/C,OACI,qBAAK5J,UAAU,iBAAf,SACK2J,EAAQQ,KAAI,SAAAvF,GAAC,OACV,qBAAmB5E,UAAU,gBAAgB8G,SAAU,EAAGC,YAR/CqD,EAQ0ExF,EAAE5C,MARlE,SAAAgF,GACV,UAAfA,EAAMC,MAAmC,UAAfD,EAAMC,MAChCyC,EAAQU,KAMJ,SACI,sBAAKpK,UAAS,iBAAY4J,GAAUA,IAAWhF,EAAE5C,MAAM,WAAW,IAAMkF,QAAS,kBAAMwC,EAAQ9E,EAAE5C,QAAjG,UACK4C,EAAEyF,MACH,cAAC,EAAD,CAAmBhI,WAAYuC,EAAEvC,iBAH/BuC,EAAE5C,OARD,IAAAoI,O,mCCN3B,SAAS6I,GAAT,GAAuC,IAArBC,EAAoB,EAApBA,OAAWnT,EAAS,mBAClC,OACI,8CAAKC,UAAU,UAAaD,GAA5B,cACI,uBACI+B,KAAK,QACL9B,UAAU,QACV+B,GAAImR,EAAOnR,KACf,uBAAOoR,QAASD,EAAOnR,GAAvB,SACI,qBAAK/B,UAAU,OAAf,SAAuBkT,EAAOlP,aAMvC,SAASoP,GAAT,GAAgE,IAA3CvH,EAA0C,EAA1CA,QAASwH,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAC/C,IAAKrI,MAAMsI,QAAQ1H,GACf,MAAM,IAAIpI,MAAM,2BAGpB,MAA4BnD,oBAAS,GAArC,mBAAOkT,EAAP,KAAeC,EAAf,KAEMC,EAAehT,mBAEfiT,EAAc,SAAA/R,GACZ8R,EAAa5S,QAAQ8S,SAAShS,EAAEM,SAKpC2R,KAGEA,EAAgB,WAClBJ,GAAU,IAGd5S,qBAAU,WAIN,OAFAiT,SAASC,iBAAiB,YAAaJ,GAEhC,WACHG,SAASE,oBAAoB,YAAaL,MAG/C,IAEH,IAAMM,EAAgB,SAACrS,EAAGsR,EAAQrO,GAC9BjD,EAAEsS,kBACFZ,EAAgBzO,GAChBgP,KASEM,EAAuB,SAACjB,EAAQrO,GAAT,OAAe,SAAAmC,GACrB,UAAfA,EAAMC,MAAmC,UAAfD,EAAMC,MAChCgN,EAAcjN,EAAOkM,EAAQrO,KAIrC,OACI,sBAAK7E,UAAU,aAAaoB,IAAKsS,EAAcxM,QAAS,kBAAMuM,GAAU,SAAAhP,GAAC,OAAKA,MAA9E,UACI,qBAAKzE,UAAU,WAAW8G,SAAU,EAAGC,WAdhB,SAAAC,GACR,UAAfA,EAAMC,MAAmC,UAAfD,EAAMC,MAChCwM,GAAU,SAAAhP,GAAC,OAAKA,MAYhB,SACKoH,EACG,cAACoH,GAAD,CAAQC,OAAQrH,EAAQwH,KACxB,OAER,qBAAKrT,UAAW,qBAAuBwT,EAAS,UAAY,IAA5D,SACK3H,EAAQ1B,KAAI,SAACiK,EAAKvP,GAAN,OACT,cAACoO,GAAD,CAAQC,OAAQkB,EAAalN,QAAS,SAACtF,GAAD,OAAOqS,EAAcrS,EAAGwS,EAAKvP,IAAIiC,SAAU0M,EAAS,OAAIzN,EAAWgB,WAAYyM,EAASW,EAAqBC,EAAKvP,QAAKkB,GAAnIlB,W,MCpEvC,SAASwP,GAAT,GAA2I,IAAhHC,EAA+G,EAA/GA,kBAAmBC,EAA4F,EAA5FA,eAAgBC,EAA4E,EAA5EA,WAAYzI,EAAgE,EAAhEA,QAASC,EAAuD,EAAvDA,SAAUyI,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,eAAgBlM,EAAc,EAAdA,WACzHmB,EAAUqC,EAAWA,EAAS7B,KAAI,SAAAvF,GAAM,IAAD,MACnC0B,EAAe5D,EAAmBuC,MAEpC2B,EAAc,EACdC,EAAgB,EAEdR,EAAQ,OAAGC,QAAH,IAAGA,GAAH,UAAGA,EAAekC,EAAWjC,eAA7B,iBAAG,EAAoCiC,EAAW1G,aAAlD,iBAAG,EAAuD0G,EAAW/B,aAArE,aAAG,YAA6E8N,EAA7E,YAA+F3P,IAE5GyB,IACAO,EAAcP,EAASO,YACvBC,EAAgBR,EAASQ,eAG7B,IAAMxE,EAAaC,KAAKqS,MAAO/N,EAAcC,EAAiB,KAE9D,MAAO,CACH7E,MAAO4C,EAAEjB,WACT0G,MAAOzF,EACPvC,iBAEH,GAECuS,EC5BH,WAGH,MAAoCtU,mBAAS,CAC3CkC,WAAOuD,EACPpF,YAAQoF,IAFV,mBAAO6O,EAAP,KAAmBC,EAAnB,KAoBA,OAhBAhU,qBAAU,WAER,SAASiU,IAEPD,EAAc,CACZrS,MAAO0O,OAAO6D,WACdpU,OAAQuQ,OAAO8D,cAQnB,OAJA9D,OAAO6C,iBAAiB,SAAUe,GAElCA,IAEO,kBAAM5D,OAAO8C,oBAAoB,SAAUc,MACjD,IACIF,EDKYK,GAEnB,OACI,sBAAKjV,UAAU,kBAAf,UAES+L,EAAQjE,OAAS,IAAM8M,EAAWpS,OAAS,KAAOuJ,EAAQjE,OAAS,GAEhE,cAAC,GAAD,CAAWwL,gBAAiB,SAACV,GAAD,OAAW0B,EAAkBvI,EAAQ6G,KAASS,aAActH,EAAQhC,WAAU,SAAAkC,GAAC,OAAIA,IAAMsI,KAAiB1I,QAASE,EAAQ5B,KAAI,SAAA1C,GAAY,MAAO,CAAC1F,GAAI0F,EAAQzD,KAAK,UAAD,OAAYyD,SAI3M,cAAC,EAAD,CAAciC,QAAS4K,EAAmB1K,SAAU2K,EAAgB5K,QAASoC,EAAQ5B,KAAI,SAAAvF,GAAC,MAAG,CAAE5C,MAAO4C,EAAEjB,WAAY0G,MAAM,UAAD,OAAYzF,SAG7I,uBACA,cAAC,GAAD,CAAgB8E,QAAS,SAAC9H,GAAD,OAAO4S,EAAW,CAAC9M,QAAS9F,EAAG6F,OAAQ8M,KAAkB5K,QAASA,EAASC,SAAW2K,EAAe5Q,aAAe8Q,EAAiBC,EAAiB,U,MEjCpL,SAASQ,GAAUnV,GACtB,IAAMoV,EAAiB1G,YAAc,+BAC/B2G,EAAiB3G,YAAc,+DAC/BtF,EAAUC,cAEhB,EAAgDJ,IAAxCH,EAAR,EAAQA,UAAWL,EAAnB,EAAmBA,WAAYI,EAA/B,EAA+BA,aAC/B,EAAsCvI,IAAMC,SAAS,IAArD,mBAAQ+U,EAAR,KAAoBC,EAApB,KACA,EAAyCjV,IAAMC,SAAS,IAAxD,mBAAQiV,EAAR,KAAsBC,EAAtB,KACA,EAAgCnV,IAAMC,UAAS,GAA/C,mBAAQoR,EAAR,KAAiB+D,EAAjB,KACA,EAA8CpV,IAAMC,SAAS,KAA7D,mBAAQiU,EAAR,KAAwBD,EAAxB,KACA,EAAoCjU,IAAMC,SAAS,GAAnD,mBAAQsR,EAAR,KAAmB8D,EAAnB,KACM/D,EAAWtR,IAAMK,OAAO,MAC1BiV,EAAiBtV,IAAMK,QAAO,GAE5B+G,GAAuB,OAAd2N,QAAc,IAAdA,OAAA,EAAAA,EAAgB1G,OAAOjH,SAAU,IAC1CC,GAAwB,OAAd0N,QAAc,IAAdA,OAAA,EAAAA,EAAgB1G,OAAOhH,UAAW,IAQlDrH,IAAMQ,WAAU,WACY,SAApB2H,EAAW1G,MAAoBsT,GAAgBjM,EAAQyC,QAAR,UAAmBuJ,EAAehJ,IAAlC,0BACpD,CAAC3D,EAAW1G,KAAMsT,EAAgBjM,EAASgM,EAAehJ,MAE7D9L,IAAMQ,WAAU,WACY,SAApB2H,EAAW1G,MAAmBsT,GAAgBd,EAAkBc,EAAe1G,OAAOjH,OAAO9D,cAElG,IAEHtD,IAAMQ,WAAU,WACZ,IAAI+U,GAAS,EAEb,MAAwB,SAApBpN,EAAW1G,KAAwB,WACnC8T,GAAS,GAGRlO,GAML+N,GAAW,GACX7I,EAAapE,EAAW/B,KAAM+B,EAAW1G,KAAM0G,EAAWjC,OAAQkB,EAAQC,GACzEiD,MAAK,YAAyB,IAAtBwB,EAAqB,EAArBA,IAAKsD,EAAgB,EAAhBA,UACFmG,IACJpN,EAAWiH,UAAYA,EACvB7G,EAAauD,GACbsJ,GAAW,OAEd5F,OAAM,SAACjO,GACAgU,GACJrQ,QAAQC,MAAM5D,MAGf,WACHgU,GAAS,KAnBTH,GAAW,QACX7M,EAAa,OAoBlB,CAAClB,EAASc,EAAYI,EAAcnB,IAEvCpH,IAAMQ,WAAU,WACY,SAApB2H,EAAW1G,OACXwT,EAAc9M,EAAWuD,SACzByJ,EAAehN,EAAWwD,SAASuI,OAExC,CAAC/L,EAAWuD,QAASvD,EAAWwD,SAAUxD,EAAW1G,KAAMyS,IAE9DlU,IAAMQ,WAAU,WAAO,IAAD,QACZyF,EAAe5D,EAAmBuC,MACpC4Q,EAA0B,SAApBrN,EAAW1G,KAAX,UAAgC2F,EAAhC,YAA0CC,GAAY,OAC5DoO,EAAI,OAAGxP,QAAH,IAAGA,GAAH,UAAGA,EAAekC,EAAWjC,eAA7B,iBAAG,EAAoCiC,EAAW1G,aAAlD,iBAAG,EAAuD0G,EAAW/B,aAArE,iBAAG,EAA0EoP,UAA7E,aAAG,EAAgFjP,YAC3F8O,EAAaI,KAEd,CAACX,EAAgBC,IA+BpB,OACI,sBAAKpV,UAAS,4BAAuBwI,EAAW1G,MAAhD,UACI,cAAC6O,EAAA,EAAD,UACI,kCAAQnI,EAAWlB,MAA2B,SAApBkB,EAAW1G,KAAX,cAAoC2F,EAApC,YAA8CC,GAAY,GAApF,eAGJ,eAAC,EAAD,CAAMzG,WAAS,EAAf,UACI,cAAC,EAAD,CAAOsI,OAAO,iBAAiBD,WAAW,SAA1C,SACKd,EAAWlB,QAEK,SAApBkB,EAAW1G,KAAkB,eAAC,EAAD,CAAOuH,KAAK,QAAZ,oBAClB5B,EADkB,aACAC,UACnB3B,EAEX,cAAC,GAAD,CAAc8C,UAAWA,EAAW6I,QAASA,EAAS7C,YA3C9C,SAACkH,GACjB,IAAI9E,EAAevO,EAAmBuC,MAEjCgM,EAAazI,EAAWjC,UACzB0K,EAAazI,EAAWjC,QAAU,IACjC0K,EAAazI,EAAWjC,QAAQiC,EAAW1G,QAC5CmP,EAAazI,EAAWjC,QAAQiC,EAAW1G,MAAQ,IAClDmP,EAAazI,EAAWjC,QAAQiC,EAAW1G,MAAM0G,EAAW/B,QAC7DwK,EAAazI,EAAWjC,QAAQiC,EAAW1G,MAAM0G,EAAW/B,MAAQ,IAGxE,IAAIoP,EAA0B,SAApBrN,EAAW1G,KAAX,UAAgC2F,EAAhC,YAA0CC,GAAY,OAChEuJ,EAAazI,EAAWjC,QAAQiC,EAAW1G,MAAM0G,EAAW/B,MAAMoP,GAAO,CACrEjP,YAAatE,KAAKqE,MAAMoP,EAAIC,cAAcjE,aAC1ClL,cAAevE,KAAKqE,MAAMoP,EAAIC,cAAcC,UAC5CzF,UAAW0F,KAAKC,MAChB9F,KAAM7H,GAGa,SAApBA,EAAW1G,OACVmP,EAAazI,EAAWjC,QAAQiC,EAAW1G,MAAM0G,EAAW/B,MAAMoP,GAAK9U,KAAO,CAC1E0G,SACAC,YAIRuJ,EAAatL,QAiB2EgM,SAAUA,EAAUC,UAAWA,EAAWpJ,WAAYA,IAEjH,SAApBA,EAAW1G,KACR,cAAC,GAAD,CACIwS,kBAAmBA,EACnBC,eAAgBA,EAEhBC,WA9GpB,YAA0C,IAApB/M,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC1ByB,EAAQzF,KAAR,UAAgByR,EAAehJ,IAA/B,mBAA6C1E,EAA7C,oBAA+DC,IAC/DiO,EAAe7U,SAAU,GA8GTiL,QAASsJ,EACTrJ,SAAUuJ,EAEVd,cAAehN,EACfiN,eAAgBhN,EAEhBc,WAAYA,IAElB,SClJlB,SAAS4N,KAEP,OADuBpN,IAAfR,WACY,cAAC0M,GAAD,IAAgB,cAAC3G,GAAD,IAWvB8H,OARf,WACE,OACE,cAAClO,EAAD,UACE,cAACiO,GAAD,OCPNE,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,UACC,cAAC,GAAD,QAGF1C,SAAS2C,eAAe,W","file":"static/js/main.3c8cfebf.chunk.js","sourcesContent":["import React from 'react'\nimport './Arrow.css'\n\n// left?: boolean\nexport function Arrow(props) {\n    return (\n        <span className=\"arrow\" dangerouslySetInnerHTML={{ __html: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather ${props.left?'left':''}\"}>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n        `}}>\n        </span>\n    )\n}\n","import React from 'react'\r\nimport './Card.css'\r\n\r\n// fullWidth: boolean\r\n// show: boolean\r\n// doTransition: boolean\r\nexport function Card(props) {\r\n\r\n    const [showing, setShowing] = React.useState(false);\r\n    const measureRef = React.useRef(null)\r\n    const [height, setHeight] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        if (!measureRef?.current) return;\r\n        setShowing(props.show);\r\n        setHeight(measureRef.current.clientHeight)\r\n    }, [props.show, measureRef])\r\n\r\n    return (\r\n        <div className={`card-wrapper ${ props.fullWidth ? 'full' : '' } ${ props.doTransition ? 'overflow-hidden' : '' }`} style={{\r\n            height: props.doTransition ? (showing ? height : 0) : \"initial\",\r\n        }}>\r\n            <div className={`card ${ showing ? 'show' : '' } ${ props.doTransition ? 'doTransition' : '' }`} ref={measureRef}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './ErrorBanner.css';\n\nexport function ErrorBanner({children}) {\n\treturn (\n\t\t<div className=\"errorBanner\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { Arrow } from './Arrow';\nimport './InputBox.css'\n\n// props = { onSubmit: (str) => {}, placeholder: string}\nexport function InputBox({ onSubmit, placeholder }) {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    return (\n        <form className=\"inputBar\" onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(searchTerm)\n            return false;\n        }}>\n            <input\n                type='text'\n                className=\"inputTextBox\"\n                id=\"inputTextBox\"\n                placeholder={placeholder}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                required\n            />\n            <button className=\"inputSearchButton\">\n                <span className=\"text\">Search<span className=\"arrow\"><Arrow /></span></span>\n            </button>\n        </form>\n    )\n}\n","import React from 'react'\nimport './PercentageOverlay.css'\n\nexport function PercentageOverlay({ percentage }) {\n\n\tif(percentage && percentage > 3) percentage = Math.max(20, percentage < 90 ? percentage : 100)\n\n\treturn percentage > 0 ? (\n\t\t<div className=\"progressBar\">\n            <div className=\"progressBarInner\" style={{width: `${percentage}%`}}></div>\n        </div>\n\t) : <React.Fragment></React.Fragment>\n}","import { versionedStoreBuilder } from './base.js';\r\n\r\n/*\r\nversion 0\r\n{\r\n    [{scraperid}]: {\r\n        movie: {\r\n            [{movie-id}]: {\r\n                full: {\r\n                    currentlyAt: number,\r\n                    totalDuration: number,\r\n                    updatedAt: number, // unix timestamp in ms\r\n                    meta: FullMetaObject, // no idea whats in here\r\n                }\r\n            }\r\n        },\r\n        show: {\r\n            [{show-id}]: {\r\n                [{season}-{episode}]: {\r\n                    currentlyAt: number,\r\n                    totalDuration: number,\r\n                    updatedAt: number, // unix timestamp in ms\r\n                    show: {\r\n                        episode: string,\r\n                        season: string,\r\n                    },\r\n                    meta: FullMetaObject, // no idea whats in here\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\nexport const VideoProgressStore = versionedStoreBuilder()\r\n    .setKey('video-progress')\r\n    .addVersion({\r\n        version: 0,\r\n        create() {\r\n            return {}\r\n        }\r\n    })\r\n    .build()\r\n","function buildStoreObject(d) {\r\n    const data = {\r\n        versions: d.versions,\r\n        currentVersion: d.maxVersion,\r\n        id: d.storageString,\r\n    }\r\n\r\n    function update(obj) {\r\n        if (!obj)\r\n            throw new Error(\"object to update is not an object\");\r\n\r\n        // repeat until object fully updated\r\n        if (obj[\"--version\"] === undefined)\r\n            obj[\"--version\"] = 0;\r\n        while (obj[\"--version\"] !== this.currentVersion) {\r\n            // get version\r\n            let version = obj[\"--version\"] || 0;\r\n            if (version.constructor !== Number || version < 0)\r\n                version = -42; // invalid on purpose so it will reset\r\n            else {\r\n                version = (version+1).toString()\r\n            }\r\n            \r\n            // check if version exists\r\n            if (!this.versions[version]) {\r\n                console.error(`Version not found for storage item in store ${this.id}, resetting`);\r\n                obj = null;\r\n                break;\r\n            }\r\n\r\n            // update object\r\n            obj = this.versions[version].update(obj);\r\n        }\r\n\r\n        // if resulting obj is null, use latest version as init object\r\n        if (obj === null) {\r\n            console.error(`Storage item for store ${this.id} has been reset due to faulty updates`);\r\n            return this.versions[this.currentVersion.toString()].init();\r\n        }\r\n\r\n        // updates succesful, return\r\n        return obj;\r\n    }\r\n\r\n    function get() {\r\n        // get from storage api\r\n        const store = this;\r\n        let data = localStorage.getItem(this.id);\r\n\r\n        // parse json if item exists\r\n        if (data) {\r\n            try {\r\n                data = JSON.parse(data);\r\n                if (!data.constructor) {\r\n                    console.error(`Storage item for store ${this.id} has not constructor`)\r\n                    throw new Error(\"storage item has no constructor\")\r\n                }\r\n                if (data.constructor !== Object) {\r\n                    console.error(`Storage item for store ${this.id} is not an object`)\r\n                    throw new Error(\"storage item is not an object\")\r\n                }\r\n            } catch (_) {\r\n                // if errored, set to null so it generates new one, see below\r\n                console.error(`Failed to parse storage item for store ${this.id}`)\r\n                data = null;\r\n            }\r\n        }\r\n\r\n        // if item doesnt exist, generate from version init\r\n        if (!data) {\r\n            data = this.versions[this.currentVersion.toString()].init();\r\n        }\r\n\r\n        // update the data if needed\r\n        data = this.update(data);\r\n\r\n        // add a save object to return value\r\n        data.save = function save() {\r\n            localStorage.setItem(store.id, JSON.stringify(data));\r\n        }\r\n        \r\n        // add instance helpers\r\n        Object.entries(d.instanceHelpers).forEach(([name, helper]) => {\r\n            if (data[name] !== undefined)\r\n                throw new Error(`helper name: ${name} on instance of store ${this.id} is reserved`)\r\n            data[name] = helper.bind(data);\r\n        })\r\n\r\n        // return data\r\n        return data;\r\n    }\r\n\r\n    // add functions to store\r\n    data.get = get.bind(data);\r\n    data.update = update.bind(data);\r\n\r\n    // add static helpers\r\n    Object.entries(d.staticHelpers).forEach(([name, helper]) => {\r\n        if (data[name] !== undefined)\r\n            throw new Error(`helper name: ${name} on store ${data.id} is reserved`)\r\n        data[name] = helper.bind({});\r\n    })\r\n\r\n    return data;\r\n}\r\n\r\n/*\r\n * Builds a versioned store\r\n *\r\n * manages versioning of localstorage items\r\n*/\r\nexport function versionedStoreBuilder() {\r\n    return {\r\n        _data: {\r\n            versionList: [],\r\n            maxVersion: 0,\r\n            versions: {},\r\n            storageString: null,\r\n            instanceHelpers: {},\r\n            staticHelpers: {},\r\n        },\r\n\r\n        /*\r\n         * set key of localstorage item, must be unique\r\n        */\r\n        setKey(str) {\r\n            this._data.storageString = str;\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * add a version to the store\r\n         *\r\n         * version: version number\r\n         * migrate: function to update from previous version to this version\r\n         * create: function to return an empty storage item from this version (in correct syntax)\r\n        */\r\n        addVersion({ version, migrate, create }) {\r\n            // input checking\r\n            if (version < 0)\r\n                throw new Error(\"Cannot add version below 0 in store\");\r\n            if (version > 0 && !migrate)\r\n                throw new Error(`Missing migration on version ${version} (needed for any version above 0)`);\r\n\r\n            // update max version list\r\n            if (version > this._data.maxVersion)\r\n                this._data.maxVersion = version;\r\n            // add to version list\r\n            this._data.versionList.push(version);\r\n\r\n\r\n            // register version\r\n            this._data.versions[version.toString()] = {\r\n                version: version, // version number\r\n                update: migrate ? (data) => { // update function, and increment version\r\n                    migrate(data);\r\n                    data[\"--version\"] = version;\r\n                    return data;\r\n                } : null,\r\n                init: create ? () => { // return an initial object\r\n                    const data = create();\r\n                    data[\"--version\"] = version;\r\n                    return data;\r\n                } : null\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * register a instance or static helper to the store \r\n         *\r\n         * name: name of the helper function\r\n         * helper: function to execute, the 'this' context is the current storage item (type is instance)\r\n         * type: \"instance\" or \"static\". instance is put on the storage item when you store.get() it, static is on the store\r\n        */\r\n        registerHelper({ name, helper, type }) {\r\n            // type\r\n            if (!type)\r\n                type = \"instance\"\r\n\r\n            // input checking\r\n            if (!name || name.constructor !== String) {\r\n                throw new Error(\"helper name is not a string\")\r\n            }\r\n            if (!helper || helper.constructor !== Function) {\r\n                throw new Error(\"helper function is not a function\")\r\n            }\r\n            if (![\"instance\", \"static\"].includes(type)) {\r\n                throw new Error(\"helper type must be either 'instance' or 'static'\")\r\n            }\r\n\r\n            // register helper\r\n            if (type === \"instance\")\r\n                this._data.instanceHelpers[name] = helper\r\n            else if (type === \"static\")\r\n                this._data.staticHelpers[name] = helper\r\n\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * returns function store based on what has been set\r\n        */\r\n        build() {\r\n            // check if version list doesnt skip versions\r\n            const versionListSorted = this._data.versionList.sort((a,b)=>a-b);\r\n            versionListSorted.forEach((v, i, arr) => {\r\n                if (i === 0)\r\n                    return;\r\n                if (v !== arr[i-1]+1)\r\n                    throw new Error(\"Version list of store is not incremental\");\r\n            })\r\n\r\n            // version zero must exist\r\n            if (versionListSorted[0] !== 0)\r\n                throw new Error(\"Version 0 doesn't exist in version list of store\");\r\n\r\n            // max version must have init function\r\n            if (!this._data.versions[this._data.maxVersion.toString()].init)\r\n                throw new Error(`Missing create function on version ${this._data.maxVersion} (needed for latest version of store)`);\r\n\r\n            // check storage string\r\n            if (!this._data.storageString)\r\n                throw new Error(\"storage key not set in store\");\r\n\r\n            // build versioned store\r\n            return buildStoreObject(this._data);\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\nimport { Arrow } from './Arrow'\nimport { PercentageOverlay } from './PercentageOverlay'\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\nimport './MovieRow.css'\n\n// title: string\n// onClick: () => void\nexport function MovieRow(props) {\n    const progressData = VideoProgressStore.get();\n    let progress;\n    let percentage = null;\n    \n    if (props.type === \"movie\") {\n        progress = progressData?.[props.source]?.movie?.[props.slug]?.full\n        \n        if (progress) {\n            percentage = Math.floor((progress.currentlyAt / progress.totalDuration) * 100)\n        }\n    }\n\n    function handleKeyPress(event){\n        if ((event.code === 'Enter' || event.code === 'Space') && props.onClick){\n            props.onClick();\n        }\n    }\n\n    return (\n        <div className=\"movieRow\" tabIndex={0} onKeyPress={handleKeyPress} onClick={() => props.onClick && props.onClick()}>\n        \n            { props.source === \"lookmovie\" && (\n                <div className=\"subtitleIcon\">\n                    <svg id=\"subtitleIcon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M20 4H4C2.897 4 2 4.897 2 6V18C2 19.103 2.897 20 4 20H20C21.103 20 22 19.103 22 18V6C22 4.897 21.103 4 20 4ZM11 10H8V14H11V16H8C6.897 16 6 15.103 6 14V10C6 8.897 6.897 8 8 8H11V10ZM18 10H15V14H18V16H15C13.897 16 13 15.103 13 14V10C13 8.897 13.897 8 15 8H18V10Z\" fill=\"#EEEEEE\"/>\n                    </svg>\n                </div>\n            ) }\n        \n            <div className=\"left\">\n                {/* <Cross /> */}\n                <div className=\"titleWrapper\">\n                    <div className=\"titleText\">\n                        {props.title}\n                        &nbsp;\n                        <span className=\"year\">({props.year})</span>\n                        <span className=\"seasonEpisodeSubtitle\">{props.place ? ` - S${props.place.season}:E${props.place.episode}` : ''}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"watch\">\n                <p>Watch {props.type}</p>\n                <Arrow/>\n            </div>\n            \n            <PercentageOverlay percentage={props.percentage || percentage} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Progress.css'\n\n// show: boolean\n// progress: number\n// steps: number\n// text: string\n// failed: boolean\nexport function Progress(props) {\n    return (\n        <div className={`progress ${props.show ? '' : 'hide'} ${props.failed ? 'failed' : ''}`}>\n            { props.text && props.text.length > 0 ? (\n                <p>{props.text}</p>) : null}\n            <div className=\"bar\">\n                <div className=\"bar-inner\" style={{\n                    width: (props.progress / props.steps * 100).toFixed(0) + \"%\"\n                }}/>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nconst MovieContext = React.createContext(null)\n\nexport function MovieProvider(props) {\n    const [page, setPage] = React.useState(\"search\");\n    const [stream, setStream] = React.useState(\"\");\n    const [streamData, setStreamData] = React.useState(null); //{ title: \"\", slug: \"\", type: \"\", episodes: [], seasons: [] }) \n\n    return (\n        <MovieContext.Provider value={{\n            navigate(str) {\n                setPage(str)\n            },\n            page,\n            setStreamUrl: setStream,\n            streamUrl: stream,\n            streamData,\n            setStreamData(d) {\n                setStreamData(p => ({...p,...d}))\n            },\n            resetStreamData() { setStreamData(null) }\n        }}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport function useMovie(props) {\n    return React.useContext(MovieContext);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMovie } from '../hooks/useMovie'\nimport { Arrow } from '../components/Arrow'\nimport './Title.css'\n\n// size: \"big\" | \"medium\" | \"small\" | null\n// accent: string | null\n// accentLink: string | null\nexport function Title(props) {\n    const { streamData, resetStreamData } = useMovie();\n    const history = useHistory();\n    const size = props.size || \"big\";\n\n    const accentLink = props.accentLink || \"\";\n    const accent = props.accent || \"\";\n\n    function handleAccentClick(){\n        if (accentLink.length > 0) {\n            history.push(`/${streamData.type}`);\n            resetStreamData();\n        }\n    }\n\n    function handleKeyPress(event){\n        if (event.code === 'Enter' || event.code === 'Space'){\n            handleAccentClick();\n        }\n    }\n    \n    return (\n        <div>\n            {accent.length > 0 ? (\n                <p onClick={handleAccentClick} className={`title-accent ${accentLink.length > 0 ? 'title-accent-link' : ''}`} tabIndex={accentLink.length > 0 ? 0 : undefined} onKeyPress={handleKeyPress}>\n                    {accentLink.length > 0 ? (<Arrow left/>) : null}{accent}\n                </p>\n            ) : null}\n            <h1 className={\"title \" + ( size ? `title-size-${size}` : '' )}>{props.children}</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport './TypeSelector.css';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function TypeSelector({ setType, choices, selected, noWrap = false }) {\n  const selectedIndex = choices.findIndex(v => v.value === selected);\n  const transformStyles = {\n    opacity: selectedIndex !== -1 ? 1 : 0,\n    transform: `translateX(${selectedIndex !== -1 ? selectedIndex * 7 : 0}rem)`,\n  };\n\n  const handleKeyPress = choice => event => {\n    if (event.code === 'Enter' || event.code === 'Space') {\n      setType(choice);\n    }\n  };\n\n  return (\n    <div className={`typeSelector ${noWrap ? 'nowrap' : ''}`}>\n      {choices.map(v => (\n        <div\n          key={v.value}\n          className={`choice ${selected === v.value ? 'selected' : ''}`}\n          onClick={() => setType(v.value)}\n          onKeyPress={handleKeyPress(v.value)}\n          tabIndex={0}\n        >\n          {v.label}\n        </div>\n      ))}\n      <div className=\"selectedBar\" style={transformStyles} />\n    </div>\n  );\n}\n","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://theflix.to`;\n\nasync function findContent(searchTerm, type) {\n    try {\n        const term = searchTerm.toLowerCase()\n        const tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/search/${type === 'show' ? 'tv' : type}?query=${term}`).then(d => d.text());\n\n        const doc = new DOMParser().parseFromString(tmdbRes, 'text/html');\n        const nodes = Array.from(doc.querySelectorAll('div.results > div > div.wrapper'));\n        const results = nodes.slice(0, 5).map((node) => {\n            let type = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('data-media-type');\n            type = type === 'tv' ? 'show' : type;\n\n            let title;\n            let year;\n            let slug;\n\n            if (type === 'movie') {\n                try {\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a').textContent;\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\n                } catch (e) {\n                    // eslint-disable-next-line array-callback-return\n                    return;\n                }\n            } else if (type === 'show') {\n                try {\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a > h2').textContent;\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\n                } catch (e) {\n                    // eslint-disable-next-line array-callback-return\n                    return;\n                }\n            }\n\n            return {\n                type: type,\n                title: title,\n                year: year,\n                slug: slug + '-' + title.replace(/[^a-z0-9]+|\\s+/gmi, \" \").replace(/\\s+/g, '-').toLowerCase(),\n                source: 'theflix'\n            }\n        });\n\n        if (results.length > 1) {\n            return { options: results };\n        } else {\n            return { options: [ results[0] ] }\n        }\n    } catch (err) {\n        console.error(err);\n        throw new Error(err)\n    }\n}\n\nasync function getEpisodes(slug) {\n    let tmdbRes;\n    \n    try {\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/seasons`).then(d => d.text());\n    } catch (err) {\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug.split('-')[0]}/seasons`).then(d => d.text());\n\n        if (tmdbRes)\n            slug = slug.split('-')[0];\n    }\n\n    const sNodes = Array.from(new DOMParser().parseFromString(tmdbRes, 'text/html').querySelectorAll('div.column_wrapper > div.flex > div'));\n\n    let seasons = [];\n    let episodes = [];\n\n    for (let s of sNodes) {\n        const text = s.querySelector('div > section > div > div > div > h2 > a').textContent;\n        if (!text.includes('Season')) continue;\n\n        const season = text.split(' ')[1];\n\n        if (!seasons.includes(season)) {\n            seasons.push(season);\n        }\n\n        if (!episodes[season]) {\n            episodes[season] = [];\n        }\n        \n        const epRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/season/${season}`).then(d => d.text());\n        const epNodes = Array.from(new DOMParser().parseFromString(epRes, 'text/html').querySelectorAll('div.episode_list > div.card'));\n        epNodes.forEach((e, i) => episodes[season].push(++i));\n    }\n    \n    return { seasons, episodes };\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    let url;\n\n    if (type === 'show') {\n        url = `${BASE_URL}/tv-show/${slug}/season-${season}/episode-${episode}`;\n    } else {\n        url = `${BASE_URL}/movie/${slug}?movieInfo=${slug}`;\n    }\n\n    const res = await fetch(url).then(d => d.text());\n\n    const scripts = Array.from(new DOMParser().parseFromString(res, \"text/html\").querySelectorAll('script'));\n    const prop = scripts.find((e) => e.textContent.includes(\"theflixvd.b-cdn\"));\n\n    if (prop) {\n        const data = JSON.parse(prop.textContent);\n        return { url: data.props.pageProps.videoUrl };\n    }\n\n    return { url: '' }\n}\n\nconst theflix = { findContent, getStreamUrl, getEpisodes }\nexport default theflix;\n","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://trailers.to/video/cloudstream/tmdb`;\r\n\r\nasync function findContent(searchTerm, type) {\r\n    try {\r\n        const term = searchTerm.toLowerCase()\r\n        const tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/search/${type === 'show' ? 'tv' : type}?query=${term}`).then(d => d.text());\r\n\r\n        const doc = new DOMParser().parseFromString(tmdbRes, 'text/html');\r\n        const nodes = Array.from(doc.querySelectorAll('div.results > div > div.wrapper'));\r\n        const results = nodes.slice(0, 5).map((node) => {\r\n            let type = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('data-media-type');\r\n            type = type === 'tv' ? 'show' : type;\r\n\r\n            let title;\r\n            let year;\r\n            let slug;\r\n\r\n            if (type === 'movie') {\r\n                try {\r\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a').textContent;\r\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\r\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\r\n                } catch (e) {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    return;\r\n                }\r\n            } else if (type === 'show') {\r\n                try {\r\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a > h2').textContent;\r\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\r\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\r\n                } catch (e) {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    return;\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: type,\r\n                title: title,\r\n                year: year,\r\n                slug: slug + '-' + title.replace(/[^a-z0-9]+|\\s+/gmi, \" \").replace(/\\s+/g, '-').toLowerCase(),\r\n                source: 'trailersto'\r\n            }\r\n        });\r\n\r\n        if (results.length > 1) {\r\n            return { options: results };\r\n        } else {\r\n            return { options: [ results[0] ] }\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw new Error(err)\r\n    }\r\n}\r\n\r\nasync function getEpisodes(slug) {\r\n    let tmdbRes;\r\n    \r\n    try {\r\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/seasons`).then(d => d.text());\r\n    } catch (err) {\r\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug.split('-')[0]}/seasons`).then(d => d.text());\r\n\r\n        if (tmdbRes)\r\n            slug = slug.split('-')[0];\r\n    }\r\n\r\n    const sNodes = Array.from(new DOMParser().parseFromString(tmdbRes, 'text/html').querySelectorAll('div.column_wrapper > div.flex > div'));\r\n\r\n    let seasons = [];\r\n    let episodes = [];\r\n\r\n    for (let s of sNodes) {\r\n        const text = s.querySelector('div > section > div > div > div > h2 > a').textContent;\r\n        if (!text.includes('Season')) continue;\r\n\r\n        const season = text.split(' ')[1];\r\n\r\n        if (!seasons.includes(season)) {\r\n            seasons.push(season);\r\n        }\r\n\r\n        if (!episodes[season]) {\r\n            episodes[season] = [];\r\n        }\r\n        \r\n        const epRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/season/${season}`).then(d => d.text());\r\n        const epNodes = Array.from(new DOMParser().parseFromString(epRes, 'text/html').querySelectorAll('div.episode_list > div.card'));\r\n        epNodes.forEach((e, i) => episodes[season].push(++i));\r\n    }\r\n    \r\n    return { seasons, episodes };\r\n}\r\n\r\nasync function getStreamUrl(slug, type, season, episode) {\r\n    let url;\r\n\r\n    if (type === 'show') {\r\n        url = `${BASE_URL}/${slug.split('-')[0]}/S${season}E${episode}`;\r\n    } else {\r\n        url = `${BASE_URL}/${slug.split('-')[0]}`;\r\n    }\r\n\r\n    if (url) {\r\n        return { url: url };\r\n    }\r\n\r\n    return { url: '' }\r\n}\r\n\r\nconst trailersto = { findContent, getStreamUrl, getEpisodes };\r\nexport default trailersto;\r\n","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://stream.vidzstore.com`;\r\n\r\nasync function findContent(searchTerm, type) {\r\n    if (type === 'show') return { options: [] };\r\n    try {\r\n        const searchUrl = `${BASE_URL}/search.php?sd=${searchTerm.replace(/ /g, \"_\")}`;\r\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\r\n\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(searchRes, \"text/html\");\r\n        const nodes = [...doc.querySelectorAll(\".post\")];\r\n        const results = nodes.map(node => {\r\n            const title = node.querySelector(\"a\").title.replace(/-/g, \" \").trim();\r\n            const titleArray = title.split(\" \");\r\n            titleArray.splice(-2);\r\n            return {\r\n                type,\r\n                title: titleArray.join(\" \"),\r\n                year: node.querySelector(\".post-meta\").innerText.split(\" \").pop().split(\"-\").shift(),\r\n                slug: encodeURIComponent(node.querySelector(\"a\").href.split('/').pop()),\r\n                source: \"vidzstore\",\r\n            }\r\n        });\r\n\r\n        return { options: results };\r\n    } catch {\r\n        return { options: [] };\r\n    }\r\n}\r\n\r\nasync function getStreamUrl(slug) {\r\n    const url = `${BASE_URL}/${decodeURIComponent(slug)}`;\r\n\r\n    const res = await fetch(url).then(d => d.text());\r\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\r\n\r\n    return { url: `${DOM.querySelector(\"source\").src}` };\r\n}\r\n\r\nconst vidzstore = { findContent, getStreamUrl }\r\nexport default vidzstore;","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://xemovie.co`;\r\n\r\nasync function findContent(searchTerm, type) {\r\n    try {\r\n        const term = searchTerm.toLowerCase()\r\n        const tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/search/${type === 'show' ? 'tv' : type}?query=${term}`).then(d => d.text());\r\n\r\n        const doc = new DOMParser().parseFromString(tmdbRes, 'text/html');\r\n        const nodes = Array.from(doc.querySelectorAll('div.results > div > div.wrapper'));\r\n        const results = nodes.slice(0, 5).map((node) => {\r\n            let type = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('data-media-type');\r\n            type = type === 'tv' ? 'show' : type;\r\n\r\n            let title;\r\n            let year;\r\n            let slug;\r\n\r\n            if (type === 'movie') {\r\n                try {\r\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a').textContent;\r\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\r\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\r\n                } catch (e) {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    return;\r\n                }\r\n            } else if (type === 'show') {\r\n                try {\r\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a > h2').textContent;\r\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\r\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\r\n                } catch (e) {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    return;\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: type,\r\n                title: title,\r\n                year: year,\r\n                slug: slug + '-' + title.replace(/[^a-z0-9]+|\\s+/gmi, \" \").replace(/\\s+/g, '-').toLowerCase(),\r\n                source: 'xemovie'\r\n            }\r\n        });\r\n\r\n        if (results.length > 1) {\r\n            return { options: results };\r\n        } else {\r\n            return { options: [ results[0] ] }\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw new Error(err)\r\n    }\r\n}\r\n\r\nasync function getEpisodes(slug) {\r\n    let tmdbRes;\r\n    \r\n    try {\r\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/seasons`).then(d => d.text());\r\n    } catch (err) {\r\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug.split('-')[0]}/seasons`).then(d => d.text());\r\n\r\n        if (tmdbRes)\r\n            slug = slug.split('-')[0];\r\n    }\r\n\r\n    const sNodes = Array.from(new DOMParser().parseFromString(tmdbRes, 'text/html').querySelectorAll('div.column_wrapper > div.flex > div'));\r\n\r\n    let seasons = [];\r\n    let episodes = [];\r\n\r\n    for (let s of sNodes) {\r\n        const text = s.querySelector('div > section > div > div > div > h2 > a').textContent;\r\n        if (!text.includes('Season')) continue;\r\n\r\n        const season = text.split(' ')[1];\r\n\r\n        if (!seasons.includes(season)) {\r\n            seasons.push(season);\r\n        }\r\n\r\n        if (!episodes[season]) {\r\n            episodes[season] = [];\r\n        }\r\n        \r\n        const epRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/season/${season}`).then(d => d.text());\r\n        const epNodes = Array.from(new DOMParser().parseFromString(epRes, 'text/html').querySelectorAll('div.episode_list > div.card'));\r\n        epNodes.forEach((e, i) => episodes[season].push(++i));\r\n    }\r\n    \r\n    return { seasons, episodes };\r\n}\r\n\r\nasync function getStreamUrl(slug, type, season, episode) {\r\n    let url;\r\n    let year;\r\n    if (type === 'movie') {\r\n        let movieInfo = await fetch(`https://api.themoviedb.org/3/movie/${slug}?api_key=d0aa8ae113702ff0e14262d798b063b0&language=en-US`).then(json => json.json())\r\n        year = movieInfo.release_date.split('-')[0];\r\n    }\r\n\r\n    if (type === 'show') {\r\n        url = `${BASE_URL}/tv-shows/${slug.substr(slug.indexOf('-')+1).replace(/\\s+/g, '-').replace(':', '').toLowerCase()}-season-${season}-episode-${episode}/watch`;\r\n    } else {\r\n        url = `${BASE_URL}/movies/${slug.substr(slug.indexOf('-')+1).replace(/\\s+/g, '-').replace(':', '').toLowerCase()}-${year}/watch`;\r\n    }\r\n\r\n    const res = await fetch(url).then(d => d.text());\r\n\r\n    const scripts = Array.from(new DOMParser().parseFromString(res, \"text/html\").querySelectorAll('script'));\r\n    const prop = scripts.find((e) => e.textContent.includes(\"s3.xemovie.com\"));\r\n\r\n    if (prop) {\r\n        const data = prop.textContent.replace(/\\s+/g, '').split(',').find((e) => e.includes(\"s3.xemovie.com\")).split('\"').find((e) => e.includes('s3.xemovie.com'))\r\n        return { url: process.env.REACT_APP_CORS_PROXY_URL + data };\r\n    }\r\n\r\n    return { url: '' }\r\n}\r\n\r\nconst xemovie = { findContent, getStreamUrl, getEpisodes }\r\nexport default xemovie;","import theflix from './scraper/theflix';\r\nimport trailersto from './scraper/trailersto';\r\nimport vidzstore from './scraper/vidzstore';\r\nimport xemovie from './scraper/xemovie';\r\n\r\nasync function findContent(searchTerm, type) {\r\n    const results = { options: []};\r\n    const content = await Promise.all([\r\n        trailersto.findContent(searchTerm, type),\r\n        theflix.findContent(searchTerm, type),\r\n        xemovie.findContent(searchTerm, type),\r\n        vidzstore.findContent(searchTerm, type)\r\n    ]);\r\n\r\n    content.forEach((o) => {\r\n        if (!o || !o.options) return;\r\n\r\n        o.options.forEach((i) => {\r\n            if (!i) return;\r\n            results.options.push(i)\r\n        })\r\n    });\r\n\r\n    return results;\r\n}\r\n\r\nasync function getStreamUrl(slug, type, source, season, episode) {\r\n    switch (source) {\r\n        case 'trailersto':\r\n            return await trailersto.getStreamUrl(slug, type, season, episode);\r\n        case 'theflix':\r\n            return await theflix.getStreamUrl(slug, type, season, episode);\r\n        case 'xemovie':\r\n            return await xemovie.getStreamUrl(slug, type, season, episode);\r\n        case 'vidzstore':\r\n            return await vidzstore.getStreamUrl(slug);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nasync function getEpisodes(slug, source) {\r\n    switch (source) {\r\n        case 'trailersto':\r\n            return await trailersto.getEpisodes(slug);\r\n        case 'theflix':\r\n            return await theflix.getEpisodes(slug);\r\n        case 'xemovie':\r\n            return await xemovie.getEpisodes(slug);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nexport { findContent, getStreamUrl, getEpisodes }","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Redirect, useHistory, useRouteMatch } from 'react-router-dom';\nimport { Arrow } from '../components/Arrow';\nimport { Card } from '../components/Card';\nimport { ErrorBanner } from '../components/ErrorBanner';\nimport { InputBox } from '../components/InputBox';\nimport { MovieRow } from '../components/MovieRow';\nimport { Progress } from '../components/Progress';\nimport { Title } from '../components/Title';\nimport { TypeSelector } from '../components/TypeSelector';\nimport { useMovie } from '../hooks/useMovie';\nimport { findContent, getEpisodes, getStreamUrl } from '../lib/index';\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\n\nimport './Search.css';\n\nexport function SearchView() {\n    const { navigate, setStreamUrl, setStreamData } = useMovie();\n\n    const history = useHistory();\n    const routeMatch = useRouteMatch('/:type');\n    const type = routeMatch?.params?.type;\n    const streamRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n\n    const maxSteps = 4;\n    const [options, setOptions] = React.useState([]);\n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState(\"\");\n    const [failed, setFailed] = React.useState(false);\n    const [showingOptions, setShowingOptions] = React.useState(false);\n    const [errorStatus, setErrorStatus] = React.useState(false);\n    const [page, setPage] = React.useState('search');\n    const [continueWatching, setContinueWatching] = React.useState([])\n\n    const fail = (str) => {\n        setProgress(maxSteps);\n        setText(str)\n        setFailed(true)\n    }\n\n    async function getStream(title, slug, type, source, year) {\n        setStreamUrl(\"\");\n\n        try {\n            setProgress(2);\n            setText(`Getting stream for \"${title}\"`);\n\n            let seasons = [];\n            let episodes = [];\n            if (type === \"show\") {\n                const data = await getEpisodes(slug, source);\n                seasons = data.seasons;\n                episodes = data.episodes;\n            }\n\n            let realUrl = '';\n            let subtitles = []\n\n            if (type === \"movie\") {\n                const { url, subtitles: subs } = await getStreamUrl(slug, type, source);\n\n                if (url === '') {\n                    return fail(`Not found: ${title}`)\n                }\n\n                realUrl = url;\n                subtitles = subs\n            }\n\n            setProgress(maxSteps);\n            setStreamUrl(realUrl);\n            setStreamData({\n                title,\n                type,\n                seasons,\n                episodes,\n                slug,\n                source,\n                year,\n                subtitles\n            })\n            setText(`Streaming...`)\n            navigate(\"movie\")\n        } catch (err) {\n            console.error(err);\n            fail(\"Failed to get stream\")\n        }\n    }\n\n    async function searchMovie(query, contentType) {\n        setFailed(false);\n        setText(`Searching for ${contentType} \"${query}\"`);\n        setProgress(1)\n        setShowingOptions(false)\n\n        try {\n            const { options } = await findContent(query, contentType);\n\n            if (options.length === 0) {\n                return fail(`Could not find that ${contentType}`)\n            } else if (options.length > 1) {\n                setProgress(2);\n                setText(`Choose your ${contentType}`);\n                setOptions(options);\n                setShowingOptions(true);\n                return;\n            }\n\n            const { title, slug, type, source, year } = options[0];\n            history.push(`${routeMatch.url}/${source}/${title}/${slug}`);\n            getStream(title, slug, type, source, year);\n        } catch (err) {\n            console.error(err);\n            fail(`Failed to find ${contentType}`)\n        }\n    }\n\n    React.useEffect(() => {\n        async function fetchHealth() {\n            await fetch(process.env.REACT_APP_CORS_PROXY_URL).catch(() => {\n                // Request failed; source likely offline\n                setErrorStatus(`Content provider is currently offline, please try again later.`)\n            })\n        }\n        fetchHealth()\n    }, []);\n\n    React.useEffect(() => {\n        if (streamRouteMatch) {\n            if (streamRouteMatch?.params.type === 'movie' || streamRouteMatch.params.type === 'show') getStream(streamRouteMatch.params.title, streamRouteMatch.params.slug, streamRouteMatch.params.type, streamRouteMatch.params.source);\n            else return setErrorStatus(\"Failed to find movie. Please try searching below.\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        const progressData = VideoProgressStore.get();\n        let newContinueWatching = []\n\n        Object.keys(progressData).forEach((source) => {\n            const all = [\n                ...Object.entries(progressData[source]?.show ?? {}),\n                ...Object.entries(progressData[source]?.movie ?? {})\n            ];\n\n            for (const [slug, data] of all) {\n                for (let subselection of Object.values(data)) {\n                    let entry = {\n                        slug,\n                        data: subselection,\n                        type: subselection.show ? 'show' : 'movie',\n                        percentageDone: Math.floor((subselection.currentlyAt / subselection.totalDuration) * 100),\n                        source\n                    }\n\n                    // due to a constraint with incompatible localStorage data,\n                    // we must quit here if episode and season data is not included\n                    // in the show's data. watching the show will resolve.\n                    if (!subselection.meta) continue;\n\n                    if (entry.percentageDone < 90) {\n                        newContinueWatching.push(entry)\n                        // begin next episode logic\n                    } else {\n                        // we can't do next episode for movies!\n                        if (!subselection.show) continue;\n\n                        let newShow = {};\n\n                        // if the current season has a next episode, load it\n                        if (subselection.meta.episodes[subselection.show.season].includes(`${parseInt(subselection.show.episode) + 1}`)) {\n                            newShow.season = subselection.show.season;\n                            newShow.episode = `${parseInt(subselection.show.episode) + 1}`;\n                            entry.percentageDone = 0;\n                            // if the current season does not have a next epsiode, and the next season has a first episode, load that\n                        } else if (subselection.meta.episodes?.[`${parseInt(subselection.show.season) + 1}`]?.[0]) {\n                            newShow.season = `${parseInt(subselection.show.season) + 1}`;\n                            newShow.episode = subselection.meta.episodes[`${parseInt(subselection.show.season) + 1}`][0];\n                            entry.percentageDone = 0;\n                            // the next episode does not exist\n                        } else {\n                            continue;\n                        }\n\n                        // assign the new episode and season data\n                        entry.data.show = { ...newShow };\n\n                        // if the next episode exists, continue. we don't want to end up with duplicate data.\n                        let nextEpisode = progressData?.[source]?.show?.[slug]?.[`${entry.data.show.season}-${entry.data.show.episode}`];\n                        if (nextEpisode) continue;\n\n                        newContinueWatching.push(entry);\n                    }\n                }\n            }\n\n            newContinueWatching = newContinueWatching.sort((a, b) => {\n                return b.data.updatedAt - a.data.updatedAt\n            });\n\n            setContinueWatching(newContinueWatching)\n        })\n    }, []);\n\n    if (!type || (type !== 'movie' && type !== 'show')) {\n        return <Redirect to=\"/show\" />\n    }\n\n    const handleKeyPress = page => event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            setPage(page);\n        }\n    }\n\n    return (\n        <div className=\"cardView\">\n            <Helmet>\n                <title>{type === 'movie' ? 'Movies' : 'Shows'} | Alex</title>\n            </Helmet>\n\n            {/* Nav */}\n            <nav>\n                <span className={page === 'search' ? 'selected-link' : ''} onClick={() => setPage('search')} onKeyPress={handleKeyPress('search')} tabIndex={0}>Search</span>\n                {continueWatching.length > 0 ?\n                    <span className={page === 'watching' ? 'selected-link' : ''} onClick={() => setPage('watching')} onKeyPress={handleKeyPress('watching')} tabIndex={0}>Continue Watching</span>\n                    : ''}\n            </nav>\n\n            {/* Search */}\n            {page === 'search' ?\n                <React.Fragment>\n                    <Card>\n                        {errorStatus ? <ErrorBanner>{errorStatus}</ErrorBanner> : ''}\n                        <Title accent=\"😒 تلاب سمو بدني\">\n                            What do you wanna watch?\n                        </Title>\n                        <TypeSelector\n                            setType={(type) => history.push(`/${type}`)}\n                            choices={[\n                                { label: \"TV Show\", value: \"show\" },\n                                { label: \"Movie\", value: \"movie\" }\n                            ]}\n                            noWrap={true}\n                            selected={type}\n                        />\n                        <InputBox placeholder={type === \"movie\" ? \"Search Movies...\" : \"Search Shows...\"} onSubmit={(str) => searchMovie(str, type)} />\n                        <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                    </Card>\n\n                    <Card show={showingOptions} doTransition>\n                        <Title size=\"medium\">\n                            Results for {type}s like that\n                        </Title>\n                        {Object.entries(options.reduce((a, v) => {\n                            if (!a[v.source]) a[v.source] = []\n                            a[v.source].push(v)\n                            return a;\n                        }, {})).map(v => (\n                            <div key={v[0]}>\n                                <p className=\"source\">{v[0]}</p>\n                                {v[1].map((v, i) => (\n                                    <MovieRow key={i} title={v.title} slug={v.slug} type={v.type} year={v.year} source={v.source} onClick={() => {\n                                        history.push(`${routeMatch.url}/${v.source}/${v.title}/${v.slug}`);\n                                        setShowingOptions(false)\n                                        getStream(v.title, v.slug, v.type, v.source, v.year)\n                                    }} />\n                                ))}\n                            </div>\n                        ))}\n                    </Card>\n                </React.Fragment> : <React.Fragment />}\n\n            {/* Continue watching */}\n            {continueWatching.length > 0 && page === 'watching' ? <Card>\n                <Title>Continue Watching</Title>\n                <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                {continueWatching?.map((v, i) => (\n                    <>\n                        <MovieRow key={i} title={v.data.meta.title} slug={v.data.meta.slug} type={v.type} year={v.data.meta.year} source={v.source} place={v.data.show} percentage={v.percentageDone} deletable onClick={() => {\n                            if (v.type === 'show') {\n                                history.push(`/show/${v.source}/${v.data.meta.title}/${v.slug}/season/${v.data.show.season}/episode/${v.data.show.episode}`)\n                            } else {\n                                history.push(`/movie/${v.source}/${v.data.meta.title}/${v.slug}`)\n                            }\n\n                            setShowingOptions(false)\n                            getStream(v.data.meta.title, v.data.meta.slug, v.type, v.source, v.data.meta.year)\n                        }} />\n                        <div className=\"remove\" onClick={() => {\n                        setContinueWatching(newCW => newCW.filter(d => d !== v));\n                        let progressSave = VideoProgressStore.get();\n                        if (v.type === 'show') {\n                            delete progressSave[v.source][v.type][v.slug][v.data.show.season + \"-\" + v.data.show.episode];\n                            progressSave.save();\n                        } else {\n                            delete progressSave[v.source][v.type][v.slug]['full'];\n                            progressSave.save();\n                        }\n\n                        if (progressSave[v.source] === {}){\n                            delete progressSave[v.source];\n                            progressSave.save();\n                            window.location.reload();\n                        }\n                            \n                        if (progressSave[v.source][v.type] === {}){\n                            delete progressSave[v.source][v.type];\n                            progressSave.save();\n                        }\n                        if (progressSave[v.source][v.type][v.slug] === {}){\n                            delete progressSave[v.source][v.type][v.slug];\n                            progressSave.save();\n                        }\n                    }}>\n                            <p style={{color:\"#d85b66\"}}>Remove</p>\n                            <p style={{paddingLeft:\".5rem\",color:\"#48c2f9\"}}>{v.data.meta.title} ({v.data.meta.year}) {v.type === 'show' ? ` - S${v.data.show.season}:E${v.data.show.episode}` : ''}</p>\n                    </div>\n                    </>\n                ))}\n            </Card> : <React.Fragment></React.Fragment>}\n\n            <div className=\"topRightCredits\">\n                <a href=\"https://alex-i7.cf/shows\" target=\"_blank\" rel=\"noreferrer\">Old Website <Arrow /></a>\n                {/* <br />\n                <a href=\"https://discord.gg/HTWuC4V5BR\" target=\"_blank\" rel=\"noreferrer\">Discord Server <Arrow /></a> */}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './VideoPlaceholder.css'\n\nexport function VideoPlaceholder(props) {\n\treturn (\n\t\t<div className=\"videoPlaceholder\">\n\t\t\t<div className=\"videoPlaceholderBox\">\n\t\t\t\t<p>{props.children}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport Hls from 'hls.js'\nimport { VideoPlaceholder } from './VideoPlaceholder'\n\nimport './VideoElement.css'\n\n// streamUrl: string\n// loading: boolean\n// setProgress: (event: NativeEvent) => void\n// videoRef: useRef\n// startTime: number\nexport function VideoElement({ streamUrl, loading, setProgress, videoRef, startTime, streamData }) {\n    const [error, setError] = React.useState(false);\n\n    function onLoad() {\n        if (startTime)\n            videoRef.current.currentTime = startTime;\n    }\n\n    React.useEffect(() => {\n        if (!streamUrl.includes('.mp4')) {\n            if (!streamUrl.includes('cloudstream')) {\n                setError(false)\n                if (!videoRef || !videoRef.current || !streamUrl || streamUrl.length === 0 || loading) return;\n                \n                const hls = new Hls();\n                \n                if (!Hls.isSupported() && videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n                    videoRef.current.src = streamUrl;\n                    return;\n                } else if (!Hls.isSupported()) {\n                    setError(true)\n                    return;\n                }\n                \n                hls.attachMedia(videoRef.current);\n                hls.loadSource(streamUrl);\n            }\n        }\n    }, [videoRef, streamUrl, loading]);\n\n    if (error)\n        return (<VideoPlaceholder>Your browser is not supported</VideoPlaceholder>)\n\n    if (loading)\n        return <VideoPlaceholder>Loading episode...</VideoPlaceholder>\n    \n    if (!streamUrl || streamUrl.length === 0)\n        return <VideoPlaceholder>No video selected</VideoPlaceholder>\n\n    if (!streamUrl.includes('.mp4')) {\n        if (streamUrl.includes('cloudstream')) {\n            return (\n                <video crossOrigin=\"anonymous\" className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                    { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={`${process.env.REACT_APP_CORS_PROXY_URL}https://lookmovie.io${sub.file}` } />) }\n                    <source src={streamUrl} type=\"video/mp4\" />\n                </video>\n            )\n        } else {\n            return (\n                <video crossOrigin=\"anonymous\" className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                    { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={`${process.env.REACT_APP_CORS_PROXY_URL}https://lookmovie.io${sub.file}` } />) }\n                </video>\n            )\n        }\n    } else {\n        return (\n            <video crossOrigin=\"anonymous\" className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={`${process.env.REACT_APP_CORS_PROXY_URL}https://lookmovie.io${sub.file}` } />) }\n                <source src={streamUrl} type=\"video/mp4\" />\n            </video>\n        )\n    }\n}\n","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './NumberSelector.css'\nimport { PercentageOverlay } from './PercentageOverlay';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function NumberSelector({ setType, choices, selected }) {\n    const handleKeyPress = choice => event => {\n        if (event.code === 'Space' || event.code === 'Enter'){\n            setType(choice);\n        }\n    }\n    return (\n        <div className=\"numberSelector\">\n            {choices.map(v=>(\n                <div key={v.value} className=\"choiceWrapper\" tabIndex={0} onKeyPress={handleKeyPress(v.value)}>\n                    <div className={`choice ${selected&&selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                        {v.label}\n                        <PercentageOverlay percentage={v.percentage} />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import { useRef, useState, useEffect } from \"react\"\nimport \"./SelectBox.css\"\n\nfunction Option({ option, ...props }) {\n    return (\n        <div className=\"option\" {...props}>\n            <input\n                type=\"radio\"\n                className=\"radio\"\n                id={option.id} />\n            <label htmlFor={option.id}>\n                <div className=\"item\">{option.name}</div>\n            </label>\n        </div>\n    )\n}\n\nexport function SelectBox({ options, selectedItem, setSelectedItem }) {\n    if (!Array.isArray(options)) {\n        throw new Error(\"Items must be an array!\")\n    }\n\n    const [active, setActive] = useState(false)\n\n    const containerRef = useRef();\n\n    const handleClick = e => {\n        if (containerRef.current.contains(e.target)) {\n            // inside click\n            return;\n        }\n        // outside click\n        closeDropdown()\n    };\n\n    const closeDropdown = () => {\n        setActive(false)\n    }\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onOptionClick = (e, option, i) => {\n        e.stopPropagation()\n        setSelectedItem(i)\n        closeDropdown()\n    }\n\n    const handleSelectedKeyPress = event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            setActive(a => !a);\n        }\n    }\n\n    const handleOptionKeyPress = (option, i) => event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            onOptionClick(event, option, i);\n        }\n    }\n\n    return (\n        <div className=\"select-box\" ref={containerRef} onClick={() => setActive(a => !a)} >\n            <div className=\"selected\" tabIndex={0} onKeyPress={handleSelectedKeyPress}>\n                {options ? (\n                    <Option option={options[selectedItem]} />\n                ) : null}\n            </div>\n            <div className={\"options-container\" + (active ? \" active\" : \"\")}>\n                {options.map((opt, i) => (\n                    <Option option={opt} key={i} onClick={(e) => onOptionClick(e, opt, i)} tabIndex={active ? 0 : undefined} onKeyPress={active ? handleOptionKeyPress(opt, i) : undefined} />\n                ))}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { TypeSelector } from './TypeSelector';\nimport { NumberSelector } from './NumberSelector';\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\nimport { SelectBox } from '../components/SelectBox';\nimport './EpisodeSelector.css'\nimport { useWindowSize } from '../hooks/useWindowSize';\n\nexport function EpisodeSelector({ setSelectedSeason, selectedSeason, setEpisode, seasons, episodes, currentSeason, currentEpisode, streamData }) {\n    const choices = episodes ? episodes.map(v => {\n        const progressData = VideoProgressStore.get();\n        \n        let currentlyAt = 0;\n        let totalDuration = 0;\n\n        const progress = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[`${selectedSeason}-${v}`]\n\n        if (progress) {\n            currentlyAt = progress.currentlyAt\n            totalDuration = progress.totalDuration\n        }\n\n        const percentage = Math.round((currentlyAt / totalDuration) * 100)\n\n        return { \n            value: v.toString(), \n            label: v,\n            percentage\n        }\n    }) : [];\n\n    const windowSize = useWindowSize()\n\n    return (\n        <div className=\"episodeSelector\">\n            {\n                (seasons.length > 0 && (windowSize.width <= 768 || seasons.length > 4)) ? \n                (\n                    <SelectBox setSelectedItem={(index) => setSelectedSeason(seasons[index])} selectedItem={seasons.findIndex(s => s === selectedSeason)} options={seasons.map(season => { return {id: season, name: `Season ${season}` }})}/>\n                )\n                :\n                (\n                    <TypeSelector setType={setSelectedSeason} selected={selectedSeason} choices={seasons.map(v=>({ value: v.toString(), label: `Season ${v}`}))} />\n                )\n            }\n            <br></br>\n            <NumberSelector setType={(e) => setEpisode({episode: e, season: selectedSeason})} choices={choices} selected={(selectedSeason.toString() === currentSeason) ? currentEpisode : null} />\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n  }","import React from 'react'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { useMovie } from '../hooks/useMovie'\nimport { VideoElement } from '../components/VideoElement'\nimport { EpisodeSelector } from '../components/EpisodeSelector'\nimport { getStreamUrl } from '../lib/index'\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\n\nimport './Movie.css'\n\nexport function MovieView(props) {\n    const baseRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n    const showRouteMatch = useRouteMatch('/:type/:source/:title/:slug/season/:season/episode/:episode');\n    const history = useHistory();\n\n    const { streamUrl, streamData, setStreamUrl } = useMovie();\n    const [ seasonList, setSeasonList ] = React.useState([]);\n    const [ episodeLists, setEpisodeList ] = React.useState([]);\n    const [ loading, setLoading ] = React.useState(false);\n    const [ selectedSeason, setSelectedSeason ] = React.useState(\"1\");\n    const [ startTime, setStartTime ] = React.useState(0);\n    const videoRef = React.useRef(null);\n    let isVideoTimeSet = React.useRef(false);\n\n    const season = showRouteMatch?.params.season || \"1\";\n    const episode = showRouteMatch?.params.episode || \"1\";\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function setEpisode({ season, episode }) {\n        history.push(`${baseRouteMatch.url}/season/${season}/episode/${episode}`);\n        isVideoTimeSet.current = false;\n    }\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && !showRouteMatch) history.replace(`${baseRouteMatch.url}/season/1/episode/1`);\n    }, [streamData.type, showRouteMatch, history, baseRouteMatch.url]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && showRouteMatch) setSelectedSeason(showRouteMatch.params.season.toString());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        let cancel = false;\n\n        if (streamData.type !== \"show\") return () => {\n            cancel = true;\n        };\n\n        if (!episode) {\n            setLoading(false);\n            setStreamUrl('');\n            return;\n        }\n\n        setLoading(true);\n        getStreamUrl(streamData.slug, streamData.type, streamData.source, season, episode)\n        .then(({ url, subtitles }) => {\n                if (cancel) return;\n                streamData.subtitles = subtitles;\n                setStreamUrl(url)\n                setLoading(false);\n            })\n            .catch((e) => {\n                if (cancel) return;\n                console.error(e)\n            })\n\n        return () => {\n            cancel = true;\n        } \n    }, [episode, streamData, setStreamUrl, season]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\") {\n            setSeasonList(streamData.seasons);\n            setEpisodeList(streamData.episodes[selectedSeason]);\n        }\n    }, [streamData.seasons, streamData.episodes, streamData.type, selectedSeason])\n\n    React.useEffect(() => {\n        const progressData = VideoProgressStore.get();\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        let time = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[key]?.currentlyAt;\n        setStartTime(time);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [baseRouteMatch, showRouteMatch]);\n\n    const setProgress = (evt) => {\n        let progressSave = VideoProgressStore.get();\n\n        if (!progressSave[streamData.source])\n            progressSave[streamData.source] = {}\n        if (!progressSave[streamData.source][streamData.type])\n            progressSave[streamData.source][streamData.type] = {}\n        if (!progressSave[streamData.source][streamData.type][streamData.slug])\n            progressSave[streamData.source][streamData.type][streamData.slug] = {}\n        \n        // Store real data\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        progressSave[streamData.source][streamData.type][streamData.slug][key] = {\n            currentlyAt: Math.floor(evt.currentTarget.currentTime),\n            totalDuration: Math.floor(evt.currentTarget.duration),\n            updatedAt: Date.now(),\n            meta: streamData\n        }\n\n        if(streamData.type === \"show\") {\n            progressSave[streamData.source][streamData.type][streamData.slug][key].show = {\n                season,\n                episode\n            }\n        }\n\n        progressSave.save();\n    }\n\n    return (\n        <div className={`cardView showType-${streamData.type}`}>\n            <Helmet>\n                <title>{streamData.title}{streamData.type === 'show' ? ` | S${season}E${episode}` : ''} | Alex</title>\n            </Helmet>\n\n            <Card fullWidth>\n                <Title accent=\"Return to home\" accentLink=\"search\">\n                    {streamData.title}\n                </Title>\n                {streamData.type === \"show\" ? <Title size=\"small\">\n                    Season {season}: Episode {episode}\n                </Title> : undefined}\n\n                <VideoElement streamUrl={streamUrl} loading={loading} setProgress={setProgress} videoRef={videoRef} startTime={startTime} streamData={streamData} />\n\n                {streamData.type === \"show\" ? \n                    <EpisodeSelector\n                        setSelectedSeason={setSelectedSeason}\n                        selectedSeason={selectedSeason}\n\n                        setEpisode={setEpisode}\n\n                        seasons={seasonList}\n                        episodes={episodeLists}\n\n                        currentSeason={season}\n                        currentEpisode={episode}\n\n                        streamData={streamData}\n                    />\n                : ''}\n            </Card>\n        </div>\n    )\n}\n","import { SearchView } from './views/Search';\nimport { MovieView } from './views/Movie';\nimport { useMovie, MovieProvider } from './hooks/useMovie';\nimport './index.css';\n\nfunction Router() {\n  const { streamData } = useMovie();\n  return streamData ? <MovieView /> : <SearchView />;\n}\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <Router />\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}